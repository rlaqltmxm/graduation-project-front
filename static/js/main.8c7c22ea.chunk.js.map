{"version":3,"sources":["components/coapClient/UserInfo.component.js","components/coapClient/ConnectTest.component.js","components/coapClient/ObserverTest.component.js","components/coapClient/Result.component.js","components/coapUnit/UnitPhase.component.js","components/coapUnit/UnitResult.component.js","components/coapUnit/UnitUserInfo.component.js","components/webClient/WebClient.component.js","components/webClient/WebClientResult.component.js","components/webClient/ClientTest.component.js","components/webClient/ClientTest2.component.js","components/webClient/GetTest.js","components/webClient/PostTest.js","components/webClient/PutTest.js","components/webClient/DeleteTest.js","components/webServer/WebServer.component.js","components/webServer/WebServerResult.component.js","components/webServer/StatusCodeTest.js","components/webServer/HeaderLineTest.js","components/CoapMain.component.js","components/WebMain.component.js","components/Main.component.js","App.js","serviceWorker.js","index.js"],"names":["UserInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextPath","path","history","push","handleChange","event","setState","defineProperty","target","name","value","sendInfo","console","log","state","localStorage","setItem","sname","sno","sip","sport","url","getItem","axios","get","then","response","data","catch","bind","assertThisInitialized","values","isValidInput","react_default","a","createElement","style","marginTop","padding","display","justifyContent","Form","Row","Group","marginLeft","textAlign","Label","for","Control","isValid","type","id","placeholder","onChange","Button","disabled","variant","color","size","onClick","Component","ConnectTest","getQuiz","active","ConnectTest_component_Quiz1","Quiz1","_this2","handleSubmit","try","window","location","paddingRight","paddingLeft","ObserverTest","marginRight","ObserverTest_component_Quiz2","Quiz2","res","answer1","message","answer2","max","answer","Result","messages","sendResult","temp","msgScore","maxScore","post","score1","score2","str1","str2","str3","str4","color1","color2","divStyle1","divStyle2","parseInt","inline","clear","UnitPhase","onSubmit","MethodScore","PostScore","PutScore","UnitResult","score3","marginBottom","divStyle3","width","paddingTop","margin","flexDirection","WebClient","sessionStorage","JSON","stringify","goSenario","DropdownButton","title","Dropdown","Item","href","score4","score5","parse","colorize","colorizeBool","toString","ClientTest","testingURL","fontStyle","ClientTest_component_Quiz1","_this3","ClientTest2","err","studentID","ClientTest2_component_Quiz2","httpCheck","httpVersion","headerUserAgent","getAnswer","postAnswer","finally","alignContent","tableStyle","fontSize","fontFamily","borderTop","borderBottom","tempData","requestCheck","GetTest","visible","className","verticalAlign","flex","handleResult","GetTest_Result","_this4","fontWeight","_this5","PostTest","PostTest_Result","PutTest","PutTest_Result","DeleteTest","DeleteTest_Result","WebServer","connTest","multiThread","errorTest200","errorTest404","errorTest400","contentLengthTest","contentHtmlTest","contentImageTest","cookieTest","elapsedTime","WebServerResult","setTimeout","toUpperCase","height","columnSpan","WebServerResult_component_HistoryTable","HistoryTable","connCorrect","multiThreadCorrect","error200Correct","error404Correct","error400Correct","lengthCorrect","htmlCorrect","imageCorrect","cookieCorrect","date","Date","now","popupOpen","popupData","dump","concat","undefined","Modal","centered","show","onHide","animation","_this6","overflowTableStyle","_objectSpread","renderPopup","length","overflowY","sort","b","map","e","i","score","filter","v","toUTCString","onLoadData","StatusCodeTest","userInfo","HeaderLineTest","CoapMain","index_es","component","WebMain","styles","theme","root","flexGrow","paper","control","spacing","unit","Main","gutterBottom","App","react_router_dom","basename","process","react_router","exact","WebClientResult","UnitUserInfo","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c7c22ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nclass UserInfo extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sname: '',\r\n            sno: '',\r\n            sip: '',\r\n            sport: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        // this.sendInfo = this.sendInfo.bind(this)\r\n\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    sendInfo = () => {\r\n\r\n        console.log(this.state)\r\n\r\n        localStorage.setItem(\"sname\", this.state.sname)\r\n        localStorage.setItem('sno', this.state.sno)\r\n        localStorage.setItem('sip', this.state.sip)\r\n        localStorage.setItem('sport', this.state.sport)\r\n\r\n        var url = localStorage.getItem('serverURL') + '/conn'        // var headers = { 'Access-Control-Allow-Origin': '*' }\r\n        axios.get(url)\r\n        .then( \r\n            response => { \r\n                console.log(response.data)\r\n                localStorage.setItem(\"connURL\", response.data.url)\r\n\r\n                // this.setState({ answer: response.data.max })\r\n                // console.log(this.state.answer)\r\n                this.nextPath('/coapClient/connect')\r\n            } \r\n            \r\n        )\r\n        .catch( response => { console.log(response) } );\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const values = this.state;\r\n        const isValidInput = values.sname == '' || values.sno == '' \r\n                        || values.sip == '' || values.sport == '';\r\n        return(\r\n            <div style={{marginTop: 200}}>\r\n                <h2>Type your profile and CoAP Client Information</h2>\r\n                <div style={{padding: 10, display: 'flex', justifyContent: 'center'}}>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sname != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sname\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type name\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Student ID: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sno != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sno\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type student id\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Your IP: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sip != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sip\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type ip\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group> \r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                    <Form.Label for=\"name\">Your Port: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sport != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sport\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type port\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        disabled={isValidInput}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            this.sendInfo\r\n                        }\r\n                        >Submit</Button>\r\n                    </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","import React, { Component } from \"react\";\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default class ConnectTest extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            url: localStorage.getItem('connURL'),\r\n            active: false\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    getQuiz = () => {\r\n        this.setState({ active: !this.state.active })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div style={{marginTop: 150}}>\r\n                <h2>Phase1. Connect your device to '{this.state.url}'</h2>\r\n                <h4 style={{padding: 10}}>\r\n                    **Message payload should contain: <br/>\r\n                    DeviceID (1), State, and Mode (push/pull)\r\n                </h4>\r\n                <Button\r\n                    variant=\"outline-success\"\r\n                    color=\"success\"\r\n                    size=\"small\"\r\n                    onClick={\r\n                        this.getQuiz\r\n                    }>GO TEST\r\n                </Button>\r\n                {this.state.active && <Quiz1></Quiz1>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass Quiz1 extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            try: \"\",\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n\r\n        localStorage.setItem(\"submit1\", this.state.try)\r\n        console.log(this.state.try)\r\n\r\n        axios.get(localStorage.getItem('serverURL')+'/obs')\r\n        .then( \r\n            response => { \r\n                // console.log(response.data)\r\n                localStorage.setItem(\"obsURL\", response.data.url)\r\n                this.nextPath('/coapClient/observer')\r\n                //console.log(localStorage.getItem('obsURL'))\r\n            } \r\n            \r\n        )\r\n        .catch( response => { console.log(response) } );\r\n\r\n        // this.nextPath('/observer')\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        window.location = path\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{padding:10, marginTop: 30, paddingRight: 150, paddingLeft: 150}}>\r\n                <h3>Q1. What response did you get?</h3>\r\n                <Form>\r\n                    <Form.Group>\r\n                    <div style={{paddingRight: 100, paddingLeft: 100, textAlign: 'left'}}>\r\n                        <Form.Label for=\"try\">Answer: </Form.Label>\r\n                        <Form.Control \r\n                            type=\"try\" \r\n                            name=\"try\" \r\n                            id=\"exampleEmail\" \r\n                            placeholder=\"your answer\"\r\n                            onChange={this.handleChange}></Form.Control></div>\r\n                    </Form.Group>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={this.handleSubmit}>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default class ObserverTest extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            active: false,\r\n            url: localStorage.getItem(\"obsURL\")\r\n        }\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        window.location = path\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    getQuiz = () => {\r\n        this.setState({ active: !this.state.active })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div style={{marginTop: 150}}>\r\n                <h2>Phase2. Send Observer to '{this.state.url}'</h2>\r\n                <h4 style={{textAlign: \"right\", marginRight: 100, padding: 10}}>\r\n                </h4>\r\n                <Button\r\n                    variant=\"outline-success\"\r\n                    color=\"success\"\r\n                    size=\"small\"\r\n                    onClick={\r\n                        this.getQuiz\r\n                    }>GO TEST\r\n                </Button>\r\n                {this.state.active && <Quiz2></Quiz2>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass Quiz2 extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            try: -1,\r\n            answer: localStorage.getItem('answer2')\r\n        }\r\n        console.log(\"\")\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n\r\n        localStorage.setItem(\"submit2\", this.state.try)\r\n        console.log(this.state.try)\r\n\r\n        var temp = {\r\n            stuInfo: localStorage.getItem('accessInfo')\r\n\r\n        }\r\n        axios.get(localStorage.getItem('serverURL')+'/result')\r\n        .then( \r\n            res => { \r\n                console.log(res.data)\r\n\r\n                var answer1 = res.data.message\r\n                var answer2 = res.data.max\r\n\r\n                if (answer1 == localStorage.getItem(\"submit1\")) localStorage.setItem(\"score1\", 50)\r\n                else localStorage.setItem(\"score1\", 0)\r\n\r\n                if (answer2 == localStorage.getItem(\"submit2\")) localStorage.setItem(\"score2\", 50)\r\n                else localStorage.setItem(\"score2\", 0)\r\n                // this.setState({ answer: response.data.max })\r\n                // console.log(this.state.answer)\r\n                this.nextPath('/coapClient/result')\r\n            } \r\n            \r\n        )\r\n        .catch( response => { console.log(response) } );\r\n\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        window.location = path\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div style={{padding:10, marginTop: 30, marginRight: 200, marginLeft: 200}}>\r\n                <h3>Q2. What is the MAX temperature during 5 notification?</h3>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <div style={{paddingRight: 100, paddingLeft: 100, textAlign: 'left'}}>\r\n                            <Form.Label for=\"try\">Answer: </Form.Label>\r\n                            <Form.Control \r\n                                type=\"try\" \r\n                                name=\"try\" \r\n                                id=\"exampleEmail\" \r\n                                placeholder=\"your answer\"\r\n                                onChange={this.handleChange}></Form.Control></div>\r\n                    </Form.Group>\r\n                    <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={this.handleSubmit}>Submit</Button>\r\n                </Form>\r\n        </div>\r\n        )\r\n        \r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n\r\nexport default class Result extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            score1: localStorage.getItem(\"score1\"),\r\n            score2: localStorage.getItem('score2'),\r\n            str1: \"\\\"Connection Success\\\"\",\r\n            str2: \"\\\"Connection Failed\\\"\",\r\n            str3: \"\\\"Observer Success\\\"\",\r\n            str4: \"\\\"Observer Failed\\\"\",\r\n            color1: \"red\",\r\n            color2: \"red\"\r\n        }\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        window.location = path\r\n    }\r\n\r\n    messages = (target) => {\r\n        return target == 0\r\n    }\r\n\r\n    sendResult = () => {\r\n        var temp = {\r\n            sname: localStorage.getItem('sname'),\r\n            sno: localStorage.getItem('sno'),\r\n            sip: localStorage.getItem('sip'),\r\n            sport: localStorage.getItem('sport'),\r\n            msgScore: localStorage.getItem('score1'),\r\n            maxScore: localStorage.getItem('score2')\r\n        }\r\n\r\n        axios.post(localStorage.getItem('serverURL')+'/score', temp)\r\n        .then(\r\n            res => { console.log(res)}\r\n        ).catch( response => { console.log(response) } );\r\n    }\r\n\r\n    render(){\r\n\r\n        const divStyle1 = {\r\n            color: this.state.score1 == 0 ? \"red\" : \"blue\"\r\n        };\r\n\r\n        const divStyle2 = {\r\n            color: this.state.score2 == 0 ? \"red\" : \"blue\"\r\n        };\r\n\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Scores</h2>\r\n                <div style={{marginTop: 50}} >\r\n                <h4>\r\n                    Q1:     {this.state.score1}pts <br/>\r\n                    <h4 style={divStyle1}>\r\n                        {this.messages(this.state.score1) ? this.state.str2 : this.state.str1}<br/></h4>\r\n                    <br/>\r\n                    Q2:     {this.state.score2}pts <br/>\r\n                    <h4 style={divStyle2}>\r\n                        {this.messages(this.state.score2) ? this.state.str4 : this.state.str3}</h4>\r\n                </h4></div>\r\n                <div style = {{marginTop: 30}}><h3>\r\n                    Total:  {parseInt(this.state.score1) + parseInt(this.state.score2)}pts\r\n                </h3></div>\r\n                <div style={{marginTop: 50, display: 'flex', justifyContent:'center'}}>\r\n                <Form inline>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={this.sendResult}\r\n                        >SUBMIT\r\n                    </Button></div>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                localStorage.clear()\r\n                                this.nextPath('/connect')\r\n                            }\r\n                        }>RETRY\r\n                    </Button></div>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {                                 \r\n                                localStorage.clear()\r\n                                this.nextPath('/')\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button></div>\r\n                </Form></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default class UnitPhase extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            url: localStorage.getItem('unitURL'),\r\n            active: false\r\n        }\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    // getQuiz = () => {\r\n    //     this.setState({ active: !this.state.active })\r\n    // }\r\n\r\n    onSubmit = () => {\r\n        axios.get(localStorage.getItem('serverURL')+'/unit_score')\r\n        .then( \r\n            response => { \r\n                console.log(response.data)\r\n                localStorage.setItem(\"methodScore\", response.data.MethodScore) //60\r\n                localStorage.setItem(\"postScore\", response.data.PostScore) //20\r\n                localStorage.setItem(\"putScore\", response.data.PutScore) //20\r\n                this.nextPath('/unitTest/unitResult')\r\n                //console.log(localStorage.getItem('obsURL'))\r\n            }   \r\n        )\r\n        .catch( response => { console.log(response) } );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div style={{marginTop: 200}}>\r\n                <h2>Send Your Coap GET to '{this.state.url}'</h2>\r\n                <h4 style={{padding: 10}}>\r\n                    **You Should Implement Coap Client <br/>\r\n                    Followed the Manual below.\r\n                </h4>\r\n                <Button\r\n                    variant=\"outline-success\"\r\n                    color=\"success\"\r\n                    size=\"small\"\r\n                    onClick={\r\n                        () => this.onSubmit()\r\n                    }>FINISH\r\n                </Button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// class Quiz1 extends Component {\r\n\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {\r\n//             try: \"\",\r\n//         }\r\n//     }\r\n\r\n//     handleChange = (event) => {\r\n//         this.setState({\r\n//           [event.target.name]: event.target.value,\r\n//         });\r\n//     };\r\n\r\n//     handleSubmit = () => {\r\n\r\n//         localStorage.setItem(\"submit1\", this.state.try)\r\n//         console.log(this.state.try)\r\n\r\n//         axios.get(localStorage.getItem('serverURL')+'/unit_score')\r\n//         .then( \r\n//             response => { \r\n//                 // console.log(response.data)\r\n//                 localStorage.setItem(\"obsURL\", response.data.url)\r\n//                 this.nextPath('/unitTest/unitResult')\r\n//                 //console.log(localStorage.getItem('obsURL'))\r\n//             } \r\n            \r\n//         )\r\n//         .catch( response => { console.log(response) } );\r\n\r\n//         // this.nextPath('/observer')\r\n//     }\r\n\r\n//     nextPath = (path) => {\r\n//         window.location = path\r\n//     }\r\n\r\n//     render(){\r\n//         return(\r\n//             <div style={{padding:10, marginTop: 30, paddingRight: 150, paddingLeft: 150}}>\r\n//                 <h3>Q1. What response did you get?</h3>\r\n//                 <Form>\r\n//                     <Form.Group>\r\n//                     <div style={{paddingRight: 100, paddingLeft: 100, textAlign: 'left'}}>\r\n//                         <Form.Label for=\"try\">Answer: </Form.Label>\r\n//                         <Form.Control \r\n//                             type=\"try\" \r\n//                             name=\"try\" \r\n//                             id=\"exampleEmail\" \r\n//                             placeholder=\"your answer\"\r\n//                             onChange={this.handleChange}></Form.Control></div>\r\n//                     </Form.Group>\r\n//                     <Button\r\n//                         variant=\"outline-success\"\r\n//                         color=\"success\"\r\n//                         size=\"small\"\r\n//                         onClick={this.handleSubmit}>Submit</Button>\r\n//                 </Form>\r\n//             </div>\r\n//         )\r\n//     }\r\n\r\n// }","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n\r\nexport default class UnitResult extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            score1: localStorage.getItem(\"methodScore\"),\r\n            score2: localStorage.getItem('postScore'),\r\n            score3: localStorage.getItem('putScore'),\r\n            str1: \"\\\"Success\\\"\",\r\n            str2: \"\\\"Failed\\\"\"\r\n        }\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        window.location = path\r\n    }\r\n\r\n    messages = (target) => {\r\n        return target == 0\r\n    }\r\n\r\n    sendResult = () => {\r\n\r\n        var temp = {\r\n            sname: localStorage.getItem('sname'),\r\n            sno: localStorage.getItem('sno'),\r\n            sip: localStorage.getItem('sip'),\r\n            sport: localStorage.getItem('sport'),\r\n        }\r\n\r\n        axios.post(localStorage.getItem('serverURL')+'/unit_result', temp)\r\n        .then(\r\n            res => { console.log(this.state)}\r\n        ).catch( response => { console.log(response) } );\r\n    }\r\n\r\n    render(){\r\n\r\n        const container = {\r\n            width: 400,\r\n            paddingRight: 80,\r\n            paddingTop: 30, \r\n            marginTop: 50, \r\n            margin: 'auto', \r\n            display: 'flex', \r\n            flexDirection: 'column',\r\n            textAlign: 'right'\r\n        }\r\n\r\n        const divStyle1 = {\r\n            color: this.state.score1 == 0 ? \"red\" : \"blue\",\r\n            marginBottom: 10\r\n        };\r\n\r\n        const divStyle2 = {\r\n            color: this.state.score2 == 0 ? \"red\" : \"blue\",\r\n            marginBottom: 10\r\n        };\r\n\r\n        const divStyle3 = {\r\n            color: this.state.score3 == 0 ? \"red\" : \"blue\",\r\n            marginBottom: 10\r\n        };\r\n\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Scores</h2>\r\n                <h4 \r\n                    style={container}>\r\n                    Method sequence: {this.state.score1}pts <br/>\r\n                    <div style={divStyle1}>\r\n                        {this.messages(this.state.score1) ? this.state.str2 : this.state.str1}<br/></div>\r\n                    POST payload: {this.state.score2}pts <br/>\r\n                    <div style={divStyle2}>\r\n                        {this.messages(this.state.score2) ? this.state.str2 : this.state.str1}</div>\r\n                    PUT payload: {this.state.score3}pts <br/>\r\n                    <div style={divStyle3}>\r\n                        {this.messages(this.state.score3) ? this.state.str2 : this.state.str1}</div>\r\n                </h4>\r\n                <div style = {{marginTop: 30}}><h3>\r\n                    Total: &nbsp;\r\n                    {parseInt(this.state.score1) + parseInt(this.state.score2)+ parseInt(this.state.score3)}pts\r\n                </h3></div>\r\n                <div style={{marginTop: 50, display: 'flex', justifyContent:'center'}}>\r\n                <Form inline>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={this.sendResult}\r\n                        >SUBMIT\r\n                    </Button></div>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                localStorage.clear()\r\n                                this.nextPath('/connect')\r\n                            }\r\n                        }>RETRY\r\n                    </Button></div>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {                                 \r\n                                localStorage.clear()\r\n                                this.nextPath('/')\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button></div>\r\n                </Form></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nclass UserInfo extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sname: '',\r\n            sno: '',\r\n            sip: '',\r\n            sport: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        // this.sendInfo = this.sendInfo.bind(this)\r\n\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    sendInfo = () => {\r\n\r\n        console.log(this.state)\r\n\r\n        localStorage.setItem(\"sname\", this.state.sname)\r\n        localStorage.setItem('sno', this.state.sno)\r\n        localStorage.setItem('sip', this.state.sip)\r\n        localStorage.setItem('sport', this.state.sport)\r\n\r\n        var url = localStorage.getItem('serverURL') + '/unit_test'        // var headers = { 'Access-Control-Allow-Origin': '*' }\r\n        axios.get(url)\r\n        .then( \r\n            response => { \r\n                console.log(response.data)\r\n                localStorage.setItem(\"unitURL\", response.data.url)\r\n\r\n                // this.setState({ answer: response.data.max })\r\n                // console.log(this.state.answer)\r\n                this.nextPath('/unitTest/unitPhase')\r\n            } \r\n            \r\n        )\r\n        .catch( response => { console.log(response) } );\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const values = this.state;\r\n        const isValidInput = values.sname == '' || values.sno == '' \r\n                        || values.sip == '' || values.sport == '';\r\n\r\n        return(\r\n            <div style={{marginTop: 200}}>\r\n                <h2>Type your profile and CoAP Client Information</h2>\r\n                <div style={{padding: 10, display: 'flex', justifyContent: 'center'}}>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sname != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sname\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type name\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Student ID: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sno != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sno\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type student id\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Your IP: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sip != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sip\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type ip\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group> \r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                    <Form.Label for=\"name\">Your Port: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sport != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sport\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type port\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        disabled={isValidInput}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            this.sendInfo\r\n                        }\r\n                        >Submit</Button>\r\n                    </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class WebClient extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sname: '',\r\n            sno: '',\r\n            sip: '',\r\n            sport: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    nextPath(path) {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    goSenario() {\r\n        sessionStorage.setItem('accessInfo', JSON.stringify(this.state))\r\n        this.nextPath('/webClient/get')\r\n    }\r\n\r\n    render(){\r\n\r\n        const values = this.state;\r\n        const isValidInput = values.sname == '' || values.sno == '' \r\n                        || values.sip == '' || values.sport == '';\r\n        return(\r\n            <div style={{marginTop: 150}}>\r\n                <h2>Step1. Type your profile and WEB Client Information</h2>\r\n                <div style={{padding: 10, display: 'flex', justifyContent: 'center'}}>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Name: </Form.Label>\r\n                                    <Form.Control\r\n                                        isValid={values.sname != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sname\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type name\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Student ID: </Form.Label>\r\n                                    <Form.Control\r\n                                        isValid={values.sno != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sno\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type student id\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Your IP: </Form.Label>\r\n                                    <Form.Control\r\n                                        isValid={values.sip != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sip\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type ip\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                    <Form.Label for=\"name\">Your Port: </Form.Label>\r\n                                    <Form.Control\r\n                                        isValid={values.sport != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sport\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type port\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n                </div>\r\n                <div style={{display: \"flex\", justifyContent: \"center\", marginTop: 20}}>\r\n                    <Button\r\n                        disabled={isValidInput}\r\n                        style={{marginRight: 50, width: 150}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            this.goSenario.bind(this)\r\n                        }\r\n                        >Go Scenario Test</Button>\r\n                    <DropdownButton disabled={isValidInput} variant=\"outline-info\" title=\"Go Unit Test\">\r\n                        <Dropdown.Item href=\"/webClient/getUnitTest\">GET method Test</Dropdown.Item>\r\n                        <Dropdown.Item href=\"/webClient/postUnitTest\">POST method Test</Dropdown.Item>\r\n                        <Dropdown.Item href=\"/webClient/pustUnitTest\">PUT method Test</Dropdown.Item>\r\n                        <Dropdown.Item href=\"/webClient/deleteUnitTest\">DELETE method Test</Dropdown.Item>\r\n                    </DropdownButton>   \r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n\r\nexport default class Result extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            score1: sessionStorage.getItem(\"getSubmit\") === sessionStorage.getItem('getAnswer') ? \"\\\"Correct\\\"\" : \"\\\"Wrong\\\"\",\r\n            score2: sessionStorage.getItem(\"postSubmit\") == sessionStorage.getItem('postAnswer') ? \"\\\"Correct\\\"\" : \"\\\"Wrong\\\"\",\r\n            score3: true,\r\n            score4: true,\r\n            score5: true\r\n        }\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    messages(target) {\r\n        return target == 0\r\n    }\r\n\r\n    sendResult() {\r\n        var temp = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\n\r\n        // need score1, score2\r\n\r\n        axios.post(localStorage.getItem('serverURL')+'/http_submit', temp)\r\n        .then(\r\n            res => { console.log(res)}\r\n        ).catch( response => { console.log(response) } );\r\n    }\r\n\r\n    colorize(target) {\r\n        if(target ===\"\\\"Correct\\\"\") return \"blue\"\r\n        else if(target === \"\\\"Wrong\\\"\") return \"red\"\r\n        else return \"black\"\r\n    }\r\n\r\n    colorizeBool(target) {\r\n        if(target) return \"blue\"\r\n        else return \"red\"\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Scores</h2>\r\n                <div style={{ paddingTop: 50,\r\n                                textAlign: \"left\",\r\n                                width: 400,\r\n                                margin: 'auto',}}>\r\n                    <h4 style={{ color: this.colorize(this.state.score1)}}>\r\n                        Q1 -GET Answer:     {this.state.score1} <br/>\r\n                    </h4>\r\n                    <h4 style={{ color: this.colorize(this.state.score2) }}>\r\n                        Q2 -POST Answer:     {this.state.score2} <br/>\r\n                    </h4>\r\n                    <h4 style={{ color: this.colorizeBool(this.state.score3) }}>\r\n                        Q3 -HTTP Check:     {this.state.score3.toString()} <br/>\r\n                    </h4>\r\n                    <h4 style={{ color: this.colorizeBool(this.state.score4) }}>\r\n                        Q4 -HTTP Version:     {this.state.score4.toString()} <br/>\r\n                    </h4>\r\n                    <h4 style={{ color: this.colorizeBool(this.state.score5) }}>\r\n                        Q5 -Header User Agent:     {this.state.score5.toString()} <br/>\r\n                    </h4>\r\n                </div>\r\n                <div style={{marginTop: 50, display: 'flex', justifyContent:'center'}}>\r\n                    <Form inline>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={this.sendResult}\r\n                            >SUBMIT\r\n                        </Button></div>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    localStorage.clear()\r\n                                    this.nextPath('/webClient/get')\r\n                                }\r\n                            }>RETRY\r\n                        </Button></div>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    localStorage.clear()\r\n                                    this.nextPath('/')\r\n                                }\r\n                            }>MAIN PAGE\r\n                        </Button></div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default class ClientTest extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            testingURL: 'null',\r\n            active: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getQuiz = this.getQuiz.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL')+'/scenario_get', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => { \r\n                this.setState({ testingURL: response.data.url });\r\n            } \r\n        ).catch( response => { console.log(response) } );\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    getQuiz() {\r\n        this.setState({ active: !this.state.active })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div style={{marginTop: 150}}>\r\n                <h2>Step2. Send GET message to URL '{this.state.testingURL}'</h2>\r\n                <h4 style={{padding: 10, textAlign: \"left\", marginLeft: 500}}>\r\n                    You should follow the protocols below: <br/><br/>\r\n                    <h5 style={{fontStyle: \"italic\"}}>\r\n                    *HTTP Version should be \"1.1\" <br/>\r\n                    *User-Agent header should be \"ComputerNetwork\"</h5>\r\n                </h4>\r\n                <Button\r\n                    variant=\"outline-success\"\r\n                    color=\"success\"\r\n                    size=\"small\"\r\n                    onClick={this.getQuiz}>GO TEST\r\n                </Button>\r\n                {this.state.active && <Quiz1></Quiz1>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass Quiz1 extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            try: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit() {\r\n\r\n        sessionStorage.setItem('getSubmit', this.state.try);\r\n        this.nextPath('/webClient/post')\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{padding:10, marginTop: 30, paddingRight: 150, paddingLeft: 150}}>\r\n                <h3>Q1. What response did you get?</h3>\r\n                <Form>\r\n                    <div style={{width: 400, margin: 'auto', textAlign: 'left'}}>\r\n                        <Form.Label for=\"try\">Answer: </Form.Label>\r\n                        <Form.Control\r\n                            type=\"try\"\r\n                            name=\"try\"\r\n                            id=\"exampleEmail\"\r\n                            placeholder=\"your answer\"\r\n                            onChange={this.handleChange.bind(this)}></Form.Control></div>\r\n                    <Button\r\n                        style={{marginTop:20}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={this.handleSubmit}>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class ClientTest2 extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            testingURL: 'null',\r\n            active: false\r\n        }\r\n        this.getQuiz = this.getQuiz.bind(this);\r\n    }\r\n\r\n    getQuiz() {\r\n        this.setState({ active: !this.state.active })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL') + '/scenario_post', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((res) => {\r\n            this.setState({ testingURL: res.url });\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Step3. Send POST request to '{this.state.testingURL}'</h2>\r\n                <h4 style={{padding: 10, textAlign: \"left\", marginLeft: 500}}>\r\n                    You should follow the protocols below: <br/><br/>\r\n                    <h5 style={{fontStyle: \"italic\"}}>\r\n                    *HTTP Version should be \"1.1\" <br/>\r\n                    *User-Agent header should be \"ComputerNetwork\" <br/>\r\n                    *The Message should include your student ID like below <br/>\r\n                    {JSON.stringify({ \"studentID\" : 20150044466 })}\r\n                    </h5>\r\n                </h4>\r\n                <div style={{marginTop: 20}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={this.getQuiz.bind(this)}>GO TEST</Button>\r\n                    {this.state.active && <Quiz2></Quiz2>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass Quiz2 extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            try: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit() {\r\n\r\n        sessionStorage.setItem('postSubmit', this.state.try);\r\n\r\n        axios.post(localStorage.getItem('serverURL')+'/http_result', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => {\r\n            console.log(response);\r\n            sessionStorage.setItem('httpCheck', response.data.httpCheck);\r\n            sessionStorage.setItem('httpVersion', response.data.httpVersion);\r\n            sessionStorage.setItem('headerUserAgent', response.data.headerUserAgent);\r\n            sessionStorage.setItem('getAnswer', response.data.getAnswer);\r\n            sessionStorage.setItem('postAnswer', response.data.postAnswer);\r\n        })\r\n        .catch((response) => {\r\n            console.log(response);\r\n        })\r\n        .finally (\r\n            this.nextPath('/webClient/result')\r\n        )\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{padding:10, marginTop: 30, marginRight: 300, marginLeft: 300}}>\r\n                <h3>Q2. What message did you GET?</h3>\r\n                <Form style={{width: 300, alignContent: 'center', margin: 'auto'}}>\r\n                    <div style={{padding:10, margin: 'auto', textAlign: 'left'}}>\r\n                        <Form.Label for=\"try\">Answer: </Form.Label>\r\n                        <Form.Control\r\n                            type=\"try\"\r\n                            name=\"try\"\r\n                            id=\"exampleEmail\"\r\n                            placeholder=\"your answer\"\r\n                            onChange={this.handleChange}></Form.Control></div><br/>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={this.handleSubmit}>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    textAlign: \"left\", \r\n    width: 300,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana',\r\n    borderTop: '1px solid #E0E0E0',\r\n    borderBottom: '1px solid #E0E0E0'\r\n}\r\n\r\nconst tempData = {\r\n    httpCheck: false,\r\n    requestCheck: false,\r\n    httpVersion: false,\r\n    headerUserAgent: false\r\n}\r\n\r\nexport default class GetTest extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            url: null,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL')+'/http_unit', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then(res => {\r\n            this.setState({ url: res.data.url });\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleResult() {\r\n        axios.post(localStorage.getItem('serverURL')+'/get_result', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => {\r\n            sessionStorage.setItem('webClientUnitGet', JSON.stringify(response.data));\r\n            this.setState({\r\n                visible: true\r\n            });\r\n        }).catch(err => {\r\n            console.log(err);\r\n\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\" \r\n                style={{marginTop: 150, display: \"flex\", verticalAlign: \"middle\"}}>\r\n                <div style={{flex: 1}}>\r\n                    <div className=\"get-quiz\" \r\n                        style={{padding:10, paddingRight: 150, paddingLeft: 150}}>\r\n                        <h3>\r\n                            Send Your GET message to url '{this.state.url}'\r\n                        </h3>\r\n                        <h4 className=\"protocol-spec\" \r\n                            style={{flex: 1, fontStyle: \"italic\"}}>\r\n                            *HTTP Version should be \"1.1\" <br/>\r\n                            *User-Agent header should be \"ComputerNetwork\"\r\n                        </h4>\r\n                        <Button\r\n                            style={{margin: 30}}\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"medium\"\r\n                            onClick={this.handleResult.bind(this)}>\r\n                                Result\r\n                        </Button>\r\n                        {this.state.visible && <Result />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Result extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            data: JSON.parse(sessionStorage.getItem('webClientUnitGet')) || tempData,\r\n        })\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    colorize(target) {\r\n        const style = { fontWeight: \"bolder\" };\r\n        if(target) style.color = \"blue\";\r\n        else style.color = \"red\";\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        return(\r\n            <div>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>HTTP Check</td>\r\n                        <td style={this.colorize(data.httpCheck)}>{(data.httpCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Request Method</td>\r\n                        <td style={this.colorize(data.requestCheck)}>{(data.requestCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>HTTP Version</td>\r\n                        <td style={this.colorize(data.httpVersion)}>{(data.httpVersion).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>User Agent</td>\r\n                        <td style={this.colorize(data.headerUserAgent)}>{(data.headerUserAgent).toString()}</td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{padding: 30, display: 'flex', justifyContent: 'center'}}>\r\n                    <Button\r\n                        style={{marginRight: 30}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                localStorage.clear()\r\n                                this.nextPath('/webClient')\r\n                            }\r\n                        }>RETRY\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                localStorage.clear()\r\n                                this.nextPath('/')\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    textAlign: \"left\", \r\n    width: 300,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana',\r\n    borderTop: '1px solid #E0E0E0',\r\n    borderBottom: '1px solid #E0E0E0'\r\n}\r\n\r\nconst tempData = {\r\n    httpCheck: false,\r\n    requestCheck: false,\r\n    httpVersion: false,\r\n    headerUserAgent: false\r\n}\r\n\r\nexport default class PostTest extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            url: null,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL')+'/http_unit', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then(res => {\r\n            this.setState({ url: res.data.url });\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleResult() {\r\n        axios.post(localStorage.getItem('serverURL')+'/post_result', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => {\r\n            sessionStorage.setItem('webClientResultPost', JSON.stringify(response.data));\r\n            this.setState({\r\n                visible: true\r\n            })\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\" \r\n                style={{marginTop: 150, display: \"flex\", verticalAlign: \"middle\"}}>\r\n                <div style={{flex: 1}}>\r\n                    <div className=\"post-quiz\" \r\n                        style={{padding:10, paddingRight: 150, paddingLeft: 150}}>\r\n                        <h3>\r\n                            Send Your POST message to url '{this.state.url}'\r\n                        </h3>\r\n                        <h4 className=\"protocol-spec\" \r\n                            style={{flex: 1, fontStyle: \"italic\"}}>\r\n                            *HTTP Version should be \"1.1\" <br/>\r\n                            *User-Agent header should be \"ComputerNetwork\" <br/>\r\n                            *The Message should include your student ID like below <br/>\r\n                            {JSON.stringify({ \"studentID\" : 20150044466 })}\r\n                        </h4>\r\n                        <Button\r\n                            style={{margin: 30}}\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"medium\"\r\n                            onClick={this.handleResult.bind(this)}>\r\n                                Result\r\n                        </Button>\r\n                        {this.state.visible && <Result />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Result extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            data: JSON.parse(sessionStorage.getItem('webClientResultPost')) || tempData,\r\n        })\r\n    }\r\n\r\n    \r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    colorize(target) {\r\n        const style = { fontWeight: \"bolder\" };\r\n        if(target) style.color = \"blue\";\r\n        else style.color = \"red\";\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        return(\r\n            <div>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>HTTP Check</td>\r\n                        <td style={this.colorize(data.httpCheck)}>{(data.httpCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Request Method</td>\r\n                        <td style={this.colorize(data.requestCheck)}>{(data.requestCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>HTTP Version</td>\r\n                        <td style={this.colorize(data.httpVersion)}>{(data.httpVersion).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>User Agent</td>\r\n                        <td style={this.colorize(data.headerUserAgent)}>{(data.headerUserAgent).toString()}</td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{padding: 30, display: 'flex', justifyContent: 'center'}}>\r\n                    <Button\r\n                        style={{marginRight: 30}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                localStorage.clear()\r\n                                this.nextPath('/webClient')\r\n                            }\r\n                        }>RETRY\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                localStorage.clear()\r\n                                this.nextPath('/')\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    textAlign: \"left\", \r\n    width: 300,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana',\r\n    borderTop: '1px solid #E0E0E0',\r\n    borderBottom: '1px solid #E0E0E0'\r\n}\r\n\r\nconst tempData = {\r\n    httpCheck: false,\r\n    requestCheck: false,\r\n    httpVersion: false,\r\n    headerUserAgent: false\r\n}\r\n\r\nexport default class PutTest extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: true,\r\n            url: null,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL')+'/http_unit', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then(res => {\r\n            this.setState({ url: res.data.url });\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleResult() {\r\n        axios.post(localStorage.getItem('serverURL')+'/put_result', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => {\r\n            sessionStorage.setItem('webClientUnitPut', JSON.stringify(response.data));\r\n            this.setState({\r\n                visible: true\r\n            })\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\" \r\n                style={{marginTop: 150, display: \"flex\", verticalAlign: \"middle\"}}>\r\n                <div style={{flex: 1}}>\r\n                    <div className=\"put-quiz\" \r\n                        style={{padding:10, paddingRight: 150, paddingLeft: 150}}>\r\n                        <h3>\r\n                            Send Your PUT message to url '{this.state.url}'\r\n                        </h3>\r\n                        <h4 className=\"protocol-spec\" \r\n                            style={{flex: 1, fontStyle: \"italic\"}}>\r\n                            *HTTP Version should be \"1.1\" <br/>\r\n                            *User-Agent header should be \"ComputerNetwork\" <br/>\r\n                            *The Message should include your student ID like below <br/>\r\n                            {JSON.stringify({ \"studentID\" : 20150044466 })}\r\n                        </h4>\r\n                        <Button\r\n                            style={{margin: 30}}\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"medium\"\r\n                            onClick={this.handleResult.bind(this)}>\r\n                                Result\r\n                        </Button>\r\n                        {this.state.visible && <Result />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Result extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.setState({\r\n            data: JSON.parse(sessionStorage.getItem('webClientUnitPut')) || tempData,\r\n        })\r\n    }\r\n\r\n    \r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    colorize(target) {\r\n        const style = { fontWeight: \"bolder\" };\r\n        if(target) style.color = \"blue\";\r\n        else style.color = \"red\";\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        return(\r\n            <div>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>HTTP Check</td>\r\n                        <td style={this.colorize(data.httpCheck)}>{(data.httpCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Request Method</td>\r\n                        <td style={this.colorize(data.requestCheck)}>{(data.requestCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>HTTP Version</td>\r\n                        <td style={this.colorize(data.httpVersion)}>{(data.httpVersion).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>User Agent</td>\r\n                        <td style={this.colorize(data.headerUserAgent)}>{(data.headerUserAgent).toString()}</td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{padding: 30, display: 'flex', justifyContent: 'center'}}>\r\n                    <Button\r\n                        style={{marginRight: 30}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                localStorage.clear()\r\n                                this.nextPath('/webClient')\r\n                            }\r\n                        }>RETRY\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                localStorage.clear()\r\n                                this.nextPath('/')\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    textAlign: \"left\", \r\n    width: 300,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana',\r\n    borderTop: '1px solid #E0E0E0',\r\n    borderBottom: '1px solid #E0E0E0'\r\n}\r\n\r\nconst tempData = {\r\n    httpCheck: false,\r\n    requestCheck: false,\r\n    httpVersion: false,\r\n    headerUserAgent: false\r\n}\r\n\r\nexport default class DeleteTest extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: true,\r\n            url: null,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL')+'/http_unit', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then(res => {\r\n            this.setState({ url: res.data.url });\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleResult() {\r\n        axios.post(localStorage.getItem('serverURL')+'/delete_result', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => {\r\n            sessionStorage.setItem('webClientResultDelete', JSON.stringify(response.data));\r\n            this.setState({\r\n                visible: true\r\n            })\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\" \r\n                style={{marginTop: 150, display: \"flex\", verticalAlign: \"middle\"}}>\r\n                <div style={{flex: 1}}>\r\n                    <div className=\"delete-quiz\" \r\n                        style={{padding:10, paddingRight: 150, paddingLeft: 150}}>\r\n                        <h3>\r\n                            Send Your DELETE message to url '{this.state.url}'\r\n                        </h3>\r\n                        <h4 className=\"protocol-spec\" \r\n                            style={{flex: 1, fontStyle: \"italic\"}}>\r\n                            *HTTP Version should be \"1.1\" <br/>\r\n                            *User-Agent header should be \"ComputerNetwork\" <br/>\r\n                        </h4>\r\n                        <Button\r\n                            style={{margin: 30}}\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"medium\"\r\n                            onClick={this.handleResult.bind(this)}>\r\n                                Result\r\n                        </Button>\r\n                        {this.state.visible && <Result />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Result extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            data: JSON.parse(sessionStorage.getItem('webClientResultDelete')) || tempData,\r\n        })\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    colorize(target) {\r\n        const style = { fontWeight: \"bolder\" };\r\n        if(target) style.color = \"blue\";\r\n        else style.color = \"red\";\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        return(\r\n            <div>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>HTTP Check</td>\r\n                        <td style={this.colorize(data.httpCheck)}>{(data.httpCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Request Method</td>\r\n                        <td style={this.colorize(data.requestCheck)}>{(data.requestCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>HTTP Version</td>\r\n                        <td style={this.colorize(data.httpVersion)}>{(data.httpVersion).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>User Agent</td>\r\n                        <td style={this.colorize(data.headerUserAgent)}>{(data.headerUserAgent).toString()}</td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{padding: 30, display: 'flex', justifyContent: 'center'}}>\r\n                    <Button\r\n                        style={{marginRight: 30}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                localStorage.clear()\r\n                                this.nextPath('/webClient')\r\n                            }\r\n                        }>RETRY\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                localStorage.clear()\r\n                                this.nextPath('/')\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button, Dropdown, DropdownButton } from 'react-bootstrap';\r\n\r\nexport default class WebServer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sname: '',\r\n            sno: '',\r\n            sip: '',\r\n            sport: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleSubmit() {\r\n        sessionStorage.setItem('accessInfo', JSON.stringify(this.state));\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    render(){\r\n\r\n        const values = this.state;\r\n        const isValidInput = values.sname == '' || values.sno == '' \r\n                        || values.sip == '' || values.sport == '';\r\n\r\n        return(\r\n            <div style={{marginTop: 150}}>\r\n                <h2>Step1. Type your profile and WEB Server Information</h2>\r\n                <div style={{padding: 10, display: 'flex', justifyContent: 'center'}}>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sname != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sname\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type name\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Student ID: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sno != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sno\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type student id\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Your IP: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sip != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sip\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type ip\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                    <Form.Label for=\"name\">Your Port: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sport != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sport\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type port\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n\r\n                </div>\r\n                <div style={{display: \"flex\", justifyContent: \"center\", marginTop: 20}}>\r\n                    <Button\r\n                        disabled={isValidInput}\r\n                        style={{marginRight: 50, width: 120}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        href=\"/graduation-project-front/webServer/result\"\r\n                        onClick={this.handleSubmit.bind(this)}\r\n                    >\r\n                        Go Test\r\n                    </Button>\r\n                    <div style={{width: 150}}>\r\n                        <DropdownButton disabled={isValidInput} variant=\"outline-info\" title=\"Go Unit Test\">\r\n                            <Dropdown.Item \r\n                                href=\"/graduation-project-front/webServer/statusCodeResult\"\r\n                                onClick={this.handleSubmit.bind(this)} \r\n                            >Status code Test</Dropdown.Item>\r\n                            <Dropdown.Item \r\n                                href=\"/graduation-project-front/webServer/headerLineResult\"\r\n                                onClick={this.handleSubmit.bind(this)}\r\n                            >Header lines Test</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Button, Modal } from 'react-bootstrap'; \r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    marginTop: 50,\r\n    textAlign: \"left\",\r\n    width: 380,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana'\r\n}\r\n\r\nconst tempData = {\r\n    \"connTest\" : \"Scoring..\", \r\n    \"multiThread\" : \"Scoring..\", \r\n    \"errorTest200\" : \"Scoring..\",\r\n    \"errorTest404\" : \"Scoring..\",\r\n    \"errorTest400\" : \"Scoring..\", \r\n    \"contentLengthTest\" : \"Scoring..\", \r\n    \"contentHtmlTest\" : \"Scoring..\", \r\n    \"contentImageTest\" : \"Scoring..\",\r\n    \"cookieTest\" : \"Scoring..\",\r\n    \"elapsedTime\": \"Unknown\",\r\n}\r\n\r\nfunction colorizeBool(target) {\r\n    const fontStyle = {};\r\n    if (target == \"Scoring..\") {\r\n        fontStyle.fontSize = 15;\r\n        fontStyle.color = \"black\";\r\n        fontStyle.fontStyle = \"italic\";\r\n    }\r\n    else {\r\n        if (target) fontStyle.color = \"blue\";\r\n        else fontStyle.color = \"red\";\r\n        fontStyle.fontWeight = \"bolder\";\r\n    }\r\n    return fontStyle;\r\n}\r\n\r\nexport default class WebServerResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const url = localStorage.getItem('serverURL')+'/web_server';\r\n        // const userInfo = JSON.parse(sessionStorage.getItem('accessInfo'));\r\n        // axios.post(url, userInfo)\r\n        // .then((res) => {\r\n        //     this.setState({\r\n        //         data: res.data == null ? tempData : \r\n        //         res.data,\r\n        //     })        \r\n        // }).catch(err => { \r\n        //         console.log(err);\r\n        //     }\r\n        // )\r\n        setTimeout(() => {\r\n            const dump = {\r\n                \"connTest\" : true, \r\n                \"multiThread\" : true, \r\n                \"errorTest200\" : true,\r\n                \"errorTest404\" : true,\r\n                \"errorTest400\" : false, \r\n                \"contentLengthTest\" : true, \r\n                \"contentHtmlTest\" : true, \r\n                \"contentImageTest\" : true,\r\n                \"cookieTest\" : true,\r\n                \"elapsedTime\": 1123,\r\n            };\r\n            this.setState({ data: dump });\r\n        }, 1800);\r\n    }\r\n\r\n    nextPath(path) {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    render() {\r\n\r\n        const data = this.state.data;\r\n        return(\r\n            <div style={{ marginTop: 100, display: 'flex' }}>\r\n                <div id=\"score-board\" style={{ flex: 1, marginLeft: 100 }}>\r\n                    <h2>Scores</h2>\r\n                    <table style={tableStyle}>\r\n                        <tr>\r\n                            <td>Web Server Socket</td>\r\n                            <td style={colorizeBool(data.connTest)}>\r\n                                {(data.connTest).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"multiThread\">\r\n                            <td>Handling Multi-thread</td>\r\n                            <td style={colorizeBool(data.multiThread)}>\r\n                                {(data.multiThread).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"errorTest200\">\r\n                            <td>Status Code: 200 OK</td>\r\n                            <td style={colorizeBool(data.errorTest200)}>\r\n                                {(data.errorTest200).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"errorTest404\">\r\n                            <td>Status Code: 404 Not Found</td>\r\n                            <td style={colorizeBool(data.errorTest404)}>\r\n                                {(data.errorTest404).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"errorTest400\">\r\n                            <td>Status Code: 400 Bad Request</td>\r\n                            <td style={colorizeBool(data.errorTest400)}>\r\n                                {(data.errorTest400).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"contentLengthTest\">\r\n                            <td>Content-Length</td>\r\n                            <td style={colorizeBool(data.contentLengthTest)}>\r\n                                {(data.contentLengthTest).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"contentHtmlTest\">\r\n                            <td>Content-Type: text/html</td>\r\n                            <td style={colorizeBool(data.contentHtmlTest)}>\r\n                                {(data.contentHtmlTest).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"contentImageTest\">\r\n                            <td>Content-Type: image/jpeg</td>\r\n                            <td style={colorizeBool(data.contentImageTest)}>\r\n                                {(data.contentImageTest).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"cookieTest\">\r\n                            <td>(Optional) Set-Cookie: </td>\r\n                            <td style={colorizeBool(data.cookieTest)}>\r\n                                {(data.cookieTest).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr style={{height: 30}}></tr>\r\n                        <tr id=\"elapsedTime\">\r\n                            <td style={{columnSpan: 2, textAlign: \"right\", color: \"grey\", fontStyle: \"italic\"}}>\r\n                                Total elapsed time: {data.elapsedTime} ms\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <div style={{marginTop: 20, display: 'flex', justifyContent:'center'}}>\r\n                        <Form inline>\r\n                            <div style={{padding: 10}}>\r\n                                <Button\r\n                                    variant=\"outline-success\"\r\n                                    color=\"success\"\r\n                                    size=\"small\"\r\n                                    onClick={\r\n                                        () => {\r\n                                            sessionStorage.clear()\r\n                                            this.nextPath('/webServer')\r\n                                        }\r\n                                    }>RETRY\r\n                                </Button>\r\n                            </div>\r\n                            <div style={{padding: 10}}>\r\n                                <Button\r\n                                    variant=\"outline-success\"\r\n                                    color=\"success\"\r\n                                    size=\"small\"\r\n                                    onClick={\r\n                                        () => {\r\n                                            sessionStorage.clear()\r\n                                            this.nextPath('/')\r\n                                        }\r\n                                    }>MAIN PAGE\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <div style={{ flex: 1, height: 300 }}>\r\n                    <HistoryTable />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass HistoryTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [{\r\n                \"connCorrect\" : true, \r\n                \"multiThreadCorrect\" : true, \r\n                \"error200Correct\" : true,\r\n                \"error404Correct\" : true,\r\n                \"error400Correct\" : false, \r\n                \"lengthCorrect\" : true, \r\n                \"htmlCorrect\" : true, \r\n                \"imageCorrect\" : true,\r\n                \"cookieCorrect\" : true,\r\n                \"elapsedTime\": 1411,\r\n                \"date\": new Date(Date.now()-1),\r\n            }],\r\n            popupOpen: false,\r\n            popupData: null,\r\n        }\r\n    }\r\n\r\n    onLoadData() {\r\n        console.log('here');\r\n        // const url = localStorage.getItem('serverURL') + '/web_server/history';\r\n        // const userInfo = JSON.parse(sessionStorage.getItem('accessInfo'));\r\n        // axios.post(url, userInfo)\r\n        // .then((res) => {\r\n        //     if (res.data != null && res.data != undefined) {\r\n        //         const jsonArr = [];\r\n        //         for (let ob of res.data) jsonArr.push(JSON.parse(ob));\r\n        //         this.setState({\r\n        //             data: jsonArr,\r\n        //         });\r\n        //     }\r\n        // }).catch(err => {\r\n        //     console.log(err);\r\n        // });\r\n        const dump = {\r\n            \"connCorrect\" : true, \r\n            \"multiThreadCorrect\" : true, \r\n            \"error200Correct\" : true,\r\n            \"error404Correct\" : true,\r\n            \"error400Correct\" : false, \r\n            \"lengthCorrect\" : true, \r\n            \"htmlCorrect\" : true, \r\n            \"imageCorrect\" : true,\r\n            \"cookieCorrect\" : true,\r\n            \"elapsedTime\": 1123,\r\n            \"date\": Date.now(),\r\n        };\r\n        this.setState({ data: this.state.data.concat(dump) });\r\n    }\r\n\r\n    renderPopup() {\r\n        const data = this.state.popupData || null;\r\n        if (data == null || data == undefined) return;\r\n\r\n        return(\r\n            <Modal\r\n                centered\r\n                show={this.state.popupOpen} \r\n                onHide={() => this.setState({\r\n                    popupOpen: false,\r\n                    popupData: null\r\n                })} \r\n                animation={true}>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>Web Server Socket</td>\r\n                        <td style={colorizeBool(data.connCorrect)}>\r\n                            {(data.connCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"multiThread\">\r\n                        <td>Handling Multi-thread</td>\r\n                        <td style={colorizeBool(data.multiThreadCorrect)}>\r\n                            {(data.multiThreadCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest200\">\r\n                        <td>Status Code: 200 OK</td>\r\n                        <td style={colorizeBool(data.error400Correct)}>\r\n                            {(data.error400Correct).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest404\">\r\n                        <td>Status Code: 404 Not Found</td>\r\n                        <td style={colorizeBool(data.error404Correct)}>\r\n                            {(data.error404Correct).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest400\">\r\n                        <td>Status Code: 400 Bad Request</td>\r\n                        <td style={colorizeBool(data.error400Correct)}>\r\n                            {(data.error400Correct).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentLengthTest\">\r\n                        <td>Content-Length</td>\r\n                        <td style={colorizeBool(data.lengthCorrect)}>\r\n                            {(data.lengthCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentHtmlTest\">\r\n                        <td>Content-Type: text/html</td>\r\n                        <td style={colorizeBool(data.htmlCorrect)}>\r\n                            {(data.htmlCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentImageTest\">\r\n                        <td>Content-Type: image/jpeg</td>\r\n                        <td style={colorizeBool(data.imageCorrect)}>\r\n                            {(data.imageCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"cookieTest\">\r\n                        <td>(Optional) Set-Cookie: </td>\r\n                        <td style={colorizeBool(data.cookieCorrect)}>\r\n                            {(data.cookieCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr style={{height: 30}}></tr>\r\n                    <tr id=\"elapsedTime\">\r\n                        <td style={{columnSpan: 2, textAlign: \"right\", color: \"grey\", fontStyle: \"italic\"}}>\r\n                            Total elapsed time: {data.elapsedTime} ms\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{ display: 'flex', justifyContent: 'center', margin: 20 }}>\r\n                    <Button \r\n                        variant=\"outline-secondary\" \r\n                        onClick={() => \r\n                            this.setState({\r\n                                popupOpen: !this.state.popupOpen\r\n                            })\r\n                        }\r\n                    >\r\n                        <span>Close</span>\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    } \r\n\r\n    render() {\r\n\r\n        const overflowTableStyle = { \r\n            ...tableStyle, \r\n            textAlign: 'right', \r\n        };\r\n        const { data } = this.state;\r\n\r\n        return (\r\n            <div style={{ marginRight: 100 }}>\r\n                {this.renderPopup()}\r\n                <h2>History</h2>\r\n                {this.state.data.length > 0 ?\r\n                <div style={{ height: 300, overflowY: 'auto' }}>\r\n                    <table id=\"history-table\" style={overflowTableStyle}>\r\n                        <thead>\r\n                            <tr style={{ height: 30, fontStyle: 'bolder' }}>\r\n                                <td>No.</td>\r\n                                <td>Date</td>\r\n                                <td>Score</td>\r\n                                <td>Detail</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style={{ fontSize: 15 }}>\r\n                            {data.sort((a, b) => (new Date(a.date) - new Date(b.date)))\r\n                            .map((e, i) => {\r\n                                const score = Object.values(e).filter(v => v == true).length;\r\n                                return (\r\n                                    <tr style={{ height: 20, borderBottom: '1px solid black' }}>\r\n                                        <td>{i}</td>\r\n                                        <td>{new Date(e.date).toUTCString()}</td>\r\n                                        <td>{score} /9</td>\r\n                                        <td>\r\n                                            <u \r\n                                                style={{ color: '#28a745' }}\r\n                                                onClick={() => {\r\n                                                    this.setState({\r\n                                                        popupOpen: true,\r\n                                                        popupData: e\r\n                                                    });    \r\n                                                }}>\r\n                                                See detail\r\n                                            </u>\r\n                                        </td>\r\n                                    </tr>  \r\n                                )}\r\n                            )}\r\n                        </tbody> \r\n                    </table>\r\n                </div> : \r\n                <h4 style={{ fontStyle: 'italic', marginTop: 50 }}>No history found.</h4>}\r\n                <div style={{marginTop: 20, display: 'flex', justifyContent:'center'}}>\r\n                    <Form inline>\r\n                        <div style={{padding: 10}}>\r\n                            <Button\r\n                                variant=\"outline-success\"\r\n                                color=\"success\"\r\n                                size=\"small\"\r\n                                onClick={\r\n                                    this.onLoadData.bind(this)\r\n                                }>Load\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap'; \r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    marginTop: 50,\r\n    textAlign: \"left\",\r\n    width: 380,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana'\r\n}\r\n\r\nconst tempData = {\r\n    \"connTest\" : \"Scoring..\", \r\n    \"multiThread\" : \"Scoring..\", \r\n    \"errorTest200\" : \"Scoring..\",\r\n    \"errorTest404\" : \"Scoring..\",\r\n    \"errorTest400\" : \"Scoring..\",\r\n    \"elapsedTime\" : \"Unknown\",\r\n}\r\n\r\nexport default class StatusCodeTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = localStorage.getItem('serverURL')+'/server-status';\r\n        const userInfo = JSON.parse(sessionStorage.getItem('accessInfo'));\r\n        axios.post(url, userInfo)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            this.setState({\r\n                data: res.data == null ? tempData : \r\n                res.data,\r\n            })        \r\n        }).catch(err => {\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n\r\n    colorizeBool(target) {\r\n        const fontStyle = {};\r\n        if (target == \"Scoring..\") {\r\n            fontStyle.fontSize = 15;\r\n            fontStyle.color = \"black\";\r\n            fontStyle.fontStyle = \"italic\";\r\n        }\r\n        else {\r\n            if (target) fontStyle.color = \"blue\";\r\n            else fontStyle.color = \"red\";\r\n            fontStyle.fontWeight = \"bolder\";\r\n        }\r\n        return fontStyle;\r\n    }\r\n\r\n    nextPath(path) {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    render() {\r\n\r\n        const {data} = this.state;\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Web Server Unit Test Result </h2>\r\n                <h4> -HTTP Status Codes</h4>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>Web Server Socket</td>\r\n                        <td style={this.colorizeBool(data.connTest)}>\r\n                            {(data.connTest).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"multiThread\">\r\n                        <td>Handling Multi-thread</td>\r\n                        <td style={this.colorizeBool(data.multiThread)}>\r\n                            {(data.multiThread).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest200\">\r\n                        <td>Status Code: 200 OK</td>\r\n                        <td style={this.colorizeBool(data.errorTest200)}>\r\n                            {(data.errorTest200).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest404\">\r\n                        <td>Status Code: 404 Not Found</td>\r\n                        <td style={this.colorizeBool(data.errorTest404)}>\r\n                            {(data.errorTest404).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest400\">\r\n                        <td>Status Code: 400 Bad Request</td>\r\n                        <td style={this.colorizeBool(data.errorTest400)}>\r\n                            {(data.errorTest400).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr style={{height: 30}}></tr>\r\n                    <tr id=\"elapsedTime\">\r\n                        <td style={{columnSpan: 2, textAlign: \"right\", color: \"grey\", fontStyle: \"italic\"}}>\r\n                            Total elapsed time: {data.elapsedTime} ms\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{marginTop: 20, display: 'flex', justifyContent:'center'}}>\r\n                    <Form inline>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    sessionStorage.clear()\r\n                                    this.nextPath('/webServer')\r\n                                }\r\n                            }>RETRY\r\n                        </Button></div>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    sessionStorage.clear()\r\n                                    this.nextPath('/')\r\n                                }\r\n                            }>MAIN PAGE\r\n                        </Button></div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap'; \r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    marginTop: 50,\r\n    textAlign: \"left\",\r\n    width: 380,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana'\r\n}\r\n\r\nconst tempData = {\r\n    \"connTest\" : \"Scoring..\", \r\n    \"multiThread\" : \"Scoring..\", \r\n    \"contentLengthTest\" : \"Scoring..\", \r\n    \"contentHtmlTest\" : \"Scoring..\", \r\n    \"contentImageTest\" : \"Scoring..\",\r\n    \"elapsedTime\" : \"Unknown\",\r\n}\r\n\r\nexport default class HeaderLineTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = localStorage.getItem('serverURL')+'/server-header';\r\n        const userInfo = JSON.parse(sessionStorage.getItem('accessInfo'));\r\n        axios.post(url, userInfo)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                data: res.data == null ? tempData : \r\n                res.data,\r\n            })        \r\n        }).catch(err => \r\n            console.log(err)\r\n        )\r\n    }\r\n\r\n    colorizeBool(target) {\r\n        const fontStyle = {};\r\n        if (target == \"Scoring..\") {\r\n            fontStyle.fontSize = 15;\r\n            fontStyle.color = \"black\";\r\n            fontStyle.fontStyle = \"italic\";\r\n        }\r\n        else {\r\n            if (target) fontStyle.color = \"blue\";\r\n            else fontStyle.color = \"red\";\r\n            fontStyle.fontWeight = \"bolder\";\r\n        }\r\n        return fontStyle;\r\n    }\r\n\r\n    nextPath(path) {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    render() {\r\n\r\n        const data = this.state.data;\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Web Server Unit Test Result</h2>\r\n                <h4>    -HTTP Header Lines</h4>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>Web Server Socket</td>\r\n                        <td style={this.colorizeBool(data.connTest)}>\r\n                            {(data.connTest).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"multiThread\">\r\n                        <td>Handling Multi-thread</td>\r\n                        <td style={this.colorizeBool(data.multiThread)}>\r\n                            {(data.multiThread).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentLengthTest\">\r\n                        <td>Content-Length</td>\r\n                        <td style={this.colorizeBool(data.contentLengthTest)}>\r\n                            {(data.contentLengthTest).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentHtmlTest\">\r\n                        <td>Content-Type: text/html</td>\r\n                        <td style={this.colorizeBool(data.contentHtmlTest)}>\r\n                            {(data.contentHtmlTest).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentImageTest\">\r\n                        <td>Content-Type: image/jpeg</td>\r\n                        <td style={this.colorizeBool(data.contentImageTest)}>\r\n                            {(data.contentImageTest).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr style={{height: 30}}></tr>\r\n                    <tr id=\"elapsedTime\">\r\n                        <td style={{columnSpan: 2, textAlign: \"right\", color: \"grey\", fontStyle: \"italic\"}}>\r\n                            Total elapsed time: {data.elapsedTime} ms\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{marginTop: 20, display: 'flex', justifyContent:'center'}}>\r\n                    <Form inline>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    sessionStorage.clear()\r\n                                    this.nextPath('/webServer')\r\n                                }\r\n                            }>RETRY\r\n                        </Button></div>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    sessionStorage.clear()\r\n                                    this.nextPath('/')\r\n                                }\r\n                            }>MAIN PAGE\r\n                        </Button></div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Card, Typography } from '@material-ui/core';\r\n\r\nexport default class CoapMain extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    render() {\r\n\r\n        const details = {\r\n            fontSize: 20,\r\n            color: '#A9A9A9'\r\n        }\r\n\r\n        return(\r\n            <div style={{width: 500, margin: 'auto'}}>\r\n                <Typography \r\n                    variant=\"h4\" \r\n                    component=\"h2\" \r\n                    style={{textAlign: \"left\", marginTop: 100, marginBottom: 30, fontStyle: 'italic'}}>\r\n                    CoAP <span style={details}>:Constrained Application Protocol</span>\r\n                </Typography>\r\n                <Card style={{display: 'flex', padding: 20, margin: 'auto'}}>\r\n                    <div style={{textAlign: \"left\", paddingLeft: 15}}>\r\n                        <Typography variant=\"h5\" component=\"h2\" style={{fontStyle: 'italic'}}>Scenario Test</Typography>\r\n                        <Typography style={{width: 350, marginTop: 10}}>\r\n                            Connect your device to server,<br/>\r\n                            and send observer to notify.<br/>\r\n                        </Typography>\r\n                    </div>\r\n                    <Button\r\n                        variant=\"outline-info\"\r\n                        onClick={() => this.nextPath('/coapClient')}\r\n                        style={{margin: 'auto'}}>\r\n                        GO TEST\r\n                    </Button>\r\n                </Card>\r\n                <div style={{height: 30}}></div>\r\n                <Card style={{display: 'flex', padding: 20, margin: 'auto'}}>\r\n                    <div style={{textAlign: \"left\", paddingLeft: 15}}>\r\n                        <Typography variant=\"h5\" component=\"h2\" style={{fontStyle: 'italic'}}>Unit Test</Typography>\r\n                        <Typography style={{width: 350, marginTop: 10}}>\r\n                            Test your CoAP client sequentially<br/>\r\n                            following the manual given.<br/>\r\n                        </Typography>\r\n                    </div>\r\n                    <Button\r\n                        variant=\"outline-info\"\r\n                        onClick={() => this.nextPath('/unitTest')}\r\n                        style={{margin: 'auto'}}>\r\n                        GO TEST\r\n                    </Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Card, Typography } from '@material-ui/core';\r\n\r\nexport default class WebMain extends Component {\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    render() {\r\n        const details = {\r\n            fontSize: 20,\r\n            color: '#A9A9A9'\r\n        }\r\n\r\n        return(\r\n            <div style={{ width: 500, margin: 'auto' }}>\r\n                <Typography \r\n                    variant=\"h4\" \r\n                    component=\"h2\" \r\n                    style={{textAlign: \"left\", marginTop: 100, marginBottom: 30, fontStyle: 'italic'}}>\r\n                    HTTP <span style={details}>:Hypertext Transfer Protocol</span>\r\n                </Typography>\r\n                <Card style={{display: 'flex', padding: 20, margin: 'auto'}}>\r\n                    <div style={{textAlign: \"left\", paddingLeft: 15}}>\r\n                        <Typography variant=\"h5\" component=\"h2\" style={{fontStyle: 'italic'}}>Web Client</Typography>\r\n                        <Typography style={{width: 350, marginTop: 10}}>\r\n                            Test your HTTP client units<br/>\r\n                            following the manual given.<br/>\r\n                        </Typography>\r\n                    </div>\r\n                    <Button\r\n                        variant=\"outline-info\"\r\n                        onClick={() => this.nextPath('/webClient')}\r\n                        style={{margin: 'auto'}}>\r\n                        GO TEST\r\n                    </Button>\r\n                </Card>\r\n                <div style={{height: 30}}></div>\r\n                <Card style={{display: 'flex', padding: 20, margin: 'auto'}}>\r\n                    <div style={{textAlign: \"left\", paddingLeft: 15}}>\r\n                        <Typography variant=\"h5\" component=\"h2\" style={{fontStyle: 'italic'}}>Web Server</Typography>\r\n                        <Typography style={{width: 350, marginTop: 10}}>\r\n                            Test your HTTP server<br/>\r\n                            following the manual given.<br/>\r\n                        </Typography>\r\n                    </div>\r\n                    <Button\r\n                        variant=\"outline-info\"\r\n                        onClick={() => this.nextPath('/webServer')}\r\n                        style={{margin: 'auto'}}>\r\n                        GO TEST\r\n                    </Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { Card, CardContent, CardActions, Typography } from '@material-ui/core';\r\nimport { Dropdown, Button } from 'react-bootstrap';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      flexGrow: 3,\r\n    },\r\n    paper: {\r\n      height: 140,\r\n      width: 100,\r\n    },\r\n    control: {\r\n      padding: theme.spacing.unit * 2,\r\n    },\r\n  });\r\n\r\nexport default class Main extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.nextPath = this.nextPath.bind(this)\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div style={{display: 'flex', justifyContent: 'center', marginTop: 200}}>\r\n                <Card style={{width: 250, padding: 10, display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\r\n                    <CardContent>\r\n                    <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\r\n                        NETWORK PROTOCOL\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        HTTP\r\n                    </Typography>\r\n                    </CardContent>\r\n                    <Button\r\n                        style={{marginLeft: 'auto', marginRight: 'auto'}} \r\n                        variant=\"outline-info\" \r\n                        onClick={() => this.nextPath('/webMain')}>\r\n                        GO TEST</Button>\r\n                </Card>\r\n                <div style={{width: 50}}></div>\r\n                <Card style={{width: 250, padding: 10, display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\r\n                    <CardContent>\r\n                    <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\r\n                        NETWORK PROTOCOL\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        CoAP\r\n                    </Typography>\r\n                    </CardContent>\r\n                    <Button variant=\"outline-info\"\r\n                    style={{marginLeft: 'auto', marginRight: 'auto'}}\r\n                    onClick={() => this.nextPath('/coapMain')}>\r\n                    GO TEST\r\n                    </Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport { UserInfo, ConnectTest, ObserverTest, Result,\r\n  WebServerResult, HeaderLineTest, StatusCodeTest,\r\n  WebClient, ClientTest, ClientTest2, WebClientResult,\r\n  UnitUserInfo, UnitPhase, UnitResult,\r\n  CoapMain, WebMain, WebServer, Main, GetTest, PostTest, DeleteTest, PutTest } from './components';\r\n\r\nclass App extends Component {         \r\n\r\n  constructor(props){\r\n    super(props);\r\n    localStorage.setItem('serverURL', 'http://192.168.0.43:8080')\r\n    this.state = {\r\n    \tanswer : \"\"\r\n    }\r\n  }\r\n\r\n  render() {   \r\n    return (\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t<Switch>\r\n\t\t\t<div className=\"App\" style={{margin: 'auto'}}>\r\n\t\t\t\t<Route path=\"/\" exact component={Main} />\r\n\t\t\t\t<Route path=\"/webMain\" exact component={WebMain} />\r\n\t\t\t\t<Route path=\"/webClient\" exact component={WebClient} />\r\n\t\t\t\t<Route path=\"/webClient/get\" exact component={ClientTest} />\r\n\t\t\t\t<Route path=\"/webClient/post\" exact component={ClientTest2} />\r\n\t\t\t\t<Route path=\"/webClient/result\" component={WebClientResult} />\r\n\t\t\t\t<Route path=\"/webClient/getUnitTest\" component={GetTest}/>\r\n\t\t\t\t<Route path=\"/webClient/postUnitTest\" component={PostTest}/>\r\n\t\t\t\t<Route path=\"/webClient/putUnitTest\" component={PutTest}/>\r\n\t\t\t\t<Route path=\"/webClient/deleteUnitTest\" component={DeleteTest}/>\r\n\t\t\t\t<Route path=\"/webServer\" exact component={WebServer}/>\r\n\t\t\t\t<Route path=\"/webServer/result\" component={WebServerResult} />\r\n\t\t\t\t<Route path=\"/webServer/statusCodeResult\" component={StatusCodeTest} />\r\n\t\t\t\t<Route path=\"/webServer/headerLineResult\" component={HeaderLineTest} />\r\n\t\t\t\t<Route path=\"/coapMain\" exact component={CoapMain} />\r\n\t\t\t\t<Route path=\"/unitTest\" exact component={UnitUserInfo} />\r\n\t\t\t\t<Route path=\"/unitTest/unitPhase\" component={UnitPhase} />\r\n\t\t\t\t<Route path=\"/unitTest/unitResult\" component={UnitResult} />\r\n\t\t\t\t<Route path=\"/coapClient\" exact component={UserInfo} />\r\n\t\t\t\t<Route path=\"/coapClient/connect\" component={ConnectTest} />\r\n\t\t\t\t<Route path=\"/coapClient/observer\" component={ObserverTest} />\r\n\t\t\t\t<Route path=\"/coapClient/result\" component={Result} />\r\n\t\t\t</div>\r\n\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}