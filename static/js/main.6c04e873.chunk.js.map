{"version":3,"sources":["components/coapClient/UserInfo.component.js","components/coapClient/ConnectTest.component.js","components/coapClient/ObserverTest.component.js","components/coapClient/Result.component.js","components/coapUnit/UnitPhase.component.js","components/coapUnit/UnitResult.component.js","components/coapUnit/UnitUserInfo.component.js","components/webClient/WebClient.component.js","components/webClient/WebClientResult.component.js","components/webClient/ClientTest.component.js","components/webClient/ClientTest2.component.js","components/webClient/GetTest.js","components/webClient/PostTest.js","components/webClient/PutTest.js","components/webClient/DeleteTest.js","components/webServer/WebServer.component.js","components/webServer/WebServerResult.component.js","components/webServer/StatusCodeTest.js","components/webServer/HeaderLineTest.js","components/CoapMain.component.js","components/WebMain.component.js","components/Main.component.js","App.js","serviceWorker.js","index.js"],"names":["UserInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextPath","path","history","push","handleChange","event","setState","defineProperty","target","name","value","sendInfo","sessionStorage","setItem","state","sname","sno","sip","sport","url","localStorage","getItem","axios","get","then","response","console","log","data","catch","bind","assertThisInitialized","values","isValidInput","react_default","a","createElement","style","marginTop","padding","display","justifyContent","Form","Row","Group","marginLeft","textAlign","Label","for","Control","isValid","type","id","placeholder","onChange","Button","disabled","variant","color","size","onClick","Component","ConnectTest","getQuiz","active","ConnectTest_component_Quiz1","Quiz1","_this2","handleSubmit","try","window","location","paddingRight","paddingLeft","ObserverTest","marginRight","ObserverTest_component_Quiz2","Quiz2","res","answer1","message","answer2","max","answer","Result","messages","sendResult","temp","msgScore","maxScore","post","score1","score2","str1","str2","str3","str4","color1","color2","divStyle1","divStyle2","parseInt","inline","clear","UnitPhase","onSubmit","MethodScore","PostScore","PutScore","UnitResult","score3","marginBottom","divStyle3","width","paddingTop","margin","flexDirection","WebClient","JSON","stringify","goSenario","DropdownButton","title","Dropdown","Item","href","getAnswer","postAnswer","httpCheck","httpVersion","headerUserAgent","parse","_response$data","_this3","colorize","toString","go","ClientTest","testingURL","param","fontStyle","ClientTest_component_Quiz1","ClientTest2","err","params","studentID","ClientTest2_component_Quiz2","_this4","alignContent","tableStyle","fontSize","fontFamily","borderTop","borderBottom","tempData","requestCheck","GetTest","visible","className","verticalAlign","flex","handleResult","GetTest_Result","fontWeight","PostTest","PostTest_Result","_this5","PutTest","PutTest_Result","DeleteTest","DeleteTest_Result","WebServer","connTest","multiThread","errorTest200","errorTest404","errorTest400","contentLengthTest","contentHtmlTest","contentImageTest","cookieTest","elapsedTime","colorizeBool","WebServerResult","userInfo","toUpperCase","height","columnSpan","WebServerResult_component_HistoryTable","HistoryTable","popupOpen","popupData","undefined","jsonArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ob","return","_this6","Modal","centered","show","onHide","animation","connCorrect","multiThreadCorrect","error400Correct","error404Correct","lengthCorrect","htmlCorrect","imageCorrect","cookieCorrect","_this7","overflowTableStyle","_objectSpread","renderPopup","length","overflowY","sort","b","Date","date","map","e","i","score","filter","v","onLoadData","StatusCodeTest","HeaderLineTest","CoapMain","index_es","component","WebMain","styles","theme","root","flexGrow","paper","control","spacing","unit","Main","gutterBottom","App","react_router_dom","basename","process","react_router","exact","WebClientResult","UnitUserInfo","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c04e873.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nclass UserInfo extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sname: '',\r\n            sno: '',\r\n            sip: '',\r\n            sport: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        // this.sendInfo = this.sendInfo.bind(this)\r\n\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    sendInfo = () => {\r\n        sessionStorage.setItem(\"sname\", this.state.sname)\r\n        sessionStorage.setItem('sno', this.state.sno)\r\n        sessionStorage.setItem('sip', this.state.sip)\r\n        sessionStorage.setItem('sport', this.state.sport)\r\n\r\n        var url = localStorage.getItem('serverURL') + '/conn'        // var headers = { 'Access-Control-Allow-Origin': '*' }\r\n        axios.get(url)\r\n        .then( \r\n            response => { \r\n                console.log(response.data)\r\n                sessionStorage.setItem(\"connURL\", response.data.url)\r\n                this.nextPath('/coap/coapClient/connect')\r\n            } \r\n            \r\n        )\r\n        .catch( response => { console.log(response) } );\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const values = this.state;\r\n        const isValidInput = values.sname == '' || values.sno == '' \r\n                        || values.sip == '' || values.sport == '';\r\n        return(\r\n            <div style={{marginTop: 200}}>\r\n                <h2>Type your profile and CoAP Client Information</h2>\r\n                <div style={{padding: 10, display: 'flex', justifyContent: 'center'}}>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sname != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sname\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type name\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Student ID: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sno != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sno\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type student id\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Your IP: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sip != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sip\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type ip\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group> \r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                    <Form.Label for=\"name\">Your Port: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sport != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sport\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type port\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        disabled={isValidInput}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            this.sendInfo\r\n                        }\r\n                        >Submit</Button>\r\n                    </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","import React, { Component } from \"react\";\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default class ConnectTest extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            url: sessionStorage.getItem('connURL'),\r\n            active: false\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    getQuiz = () => {\r\n        this.setState({ active: !this.state.active })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div style={{marginTop: 150}}>\r\n                <h2>Phase1. Connect your device to '{this.state.url}'</h2>\r\n                <h4 style={{padding: 10}}>\r\n                    **Message payload should contain: <br/>\r\n                    DeviceID (1), State, and Mode (push/pull)\r\n                </h4>\r\n                <Button\r\n                    variant=\"outline-success\"\r\n                    color=\"success\"\r\n                    size=\"small\"\r\n                    onClick={\r\n                        this.getQuiz\r\n                    }>GO TEST\r\n                </Button>\r\n                {this.state.active && <Quiz1></Quiz1>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass Quiz1 extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            try: \"\",\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n\r\n        sessionStorage.setItem(\"submit1\", this.state.try)\r\n        axios.get(localStorage.getItem('serverURL')+'/obs')\r\n        .then( \r\n            response => { \r\n                sessionStorage.setItem(\"obsURL\", response.data.url)\r\n                this.nextPath('/coap/coapClient/connect/observer')\r\n            } \r\n            \r\n        )\r\n        .catch( response => { console.log(response) } );\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        window.location = path\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{padding:10, marginTop: 30, paddingRight: 150, paddingLeft: 150}}>\r\n                <h3>Q1. What response did you get?</h3>\r\n                <Form>\r\n                    <Form.Group>\r\n                    <div style={{paddingRight: 100, paddingLeft: 100, textAlign: 'left'}}>\r\n                        <Form.Label for=\"try\">Answer: </Form.Label>\r\n                        <Form.Control \r\n                            type=\"try\" \r\n                            name=\"try\" \r\n                            id=\"exampleEmail\" \r\n                            placeholder=\"your answer\"\r\n                            onChange={this.handleChange}></Form.Control></div>\r\n                    </Form.Group>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={this.handleSubmit}>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default class ObserverTest extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            active: false,\r\n            url: sessionStorage.getItem(\"obsURL\")\r\n        }\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        window.location = path\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    getQuiz = () => {\r\n        this.setState({ active: !this.state.active })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div style={{marginTop: 150}}>\r\n                <h2>Phase2. Send Observer to '{this.state.url}'</h2>\r\n                <h4 style={{textAlign: \"right\", marginRight: 100, padding: 10}}>\r\n                </h4>\r\n                <Button\r\n                    variant=\"outline-success\"\r\n                    color=\"success\"\r\n                    size=\"small\"\r\n                    onClick={\r\n                        this.getQuiz\r\n                    }>GO TEST\r\n                </Button>\r\n                {this.state.active && <Quiz2></Quiz2>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass Quiz2 extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            try: -1,\r\n            answer: sessionStorage.getItem('answer2')\r\n        }\r\n        console.log(\"\")\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n\r\n        sessionStorage.setItem(\"submit2\", this.state.try)\r\n        axios.get(localStorage.getItem('serverURL')+'/result')\r\n        .then( \r\n            res => { \r\n                console.log(res.data)\r\n\r\n                var answer1 = res.data.message\r\n                var answer2 = res.data.max\r\n\r\n                if (answer1 == sessionStorage.getItem(\"submit1\")) sessionStorage.setItem(\"score1\", 50)\r\n                else sessionStorage.setItem(\"score1\", 0)\r\n\r\n                if (answer2 == sessionStorage.getItem(\"submit2\")) sessionStorage.setItem(\"score2\", 50)\r\n                else sessionStorage.setItem(\"score2\", 0)\r\n                this.nextPath('/coapClient/result')\r\n            } \r\n            \r\n        )\r\n        .catch( response => { console.log(response) } );\r\n\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        window.location = path\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div style={{padding:10, marginTop: 30, marginRight: 200, marginLeft: 200}}>\r\n                <h3>Q2. What is the MAX temperature during 5 notification?</h3>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <div style={{paddingRight: 100, paddingLeft: 100, textAlign: 'left'}}>\r\n                            <Form.Label for=\"try\">Answer: </Form.Label>\r\n                            <Form.Control \r\n                                type=\"try\" \r\n                                name=\"try\" \r\n                                id=\"exampleEmail\" \r\n                                placeholder=\"your answer\"\r\n                                onChange={this.handleChange}></Form.Control></div>\r\n                    </Form.Group>\r\n                    <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={this.handleSubmit}>Submit</Button>\r\n                </Form>\r\n        </div>\r\n        )\r\n        \r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n\r\nexport default class Result extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            score1: sessionStorage.getItem(\"score1\"),\r\n            score2: sessionStorage.getItem('score2'),\r\n            str1: \"\\\"Connection Success\\\"\",\r\n            str2: \"\\\"Connection Failed\\\"\",\r\n            str3: \"\\\"Observer Success\\\"\",\r\n            str4: \"\\\"Observer Failed\\\"\",\r\n            color1: \"red\",\r\n            color2: \"red\"\r\n        }\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        window.location = path\r\n    }\r\n\r\n    messages = (target) => {\r\n        return target == 0\r\n    }\r\n\r\n    sendResult = () => {\r\n        var temp = {\r\n            sname: sessionStorage.getItem('sname'),\r\n            sno: sessionStorage.getItem('sno'),\r\n            sip: sessionStorage.getItem('sip'),\r\n            sport: sessionStorage.getItem('sport'),\r\n            msgScore: sessionStorage.getItem('score1'),\r\n            maxScore: sessionStorage.getItem('score2')\r\n        }\r\n\r\n        axios.post(localStorage.getItem('serverURL')+'/score', temp)\r\n        .then(\r\n            res => { console.log(res)}\r\n        ).catch( response => { console.log(response) } );\r\n    }\r\n\r\n    render(){\r\n\r\n        const divStyle1 = {\r\n            color: this.state.score1 == 0 ? \"red\" : \"blue\"\r\n        };\r\n\r\n        const divStyle2 = {\r\n            color: this.state.score2 == 0 ? \"red\" : \"blue\"\r\n        };\r\n\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Scores</h2>\r\n                <div style={{marginTop: 50}} >\r\n                <h4>\r\n                    Q1:     {this.state.score1}pts <br/>\r\n                    <h4 style={divStyle1}>\r\n                        {this.messages(this.state.score1) ? this.state.str2 : this.state.str1}<br/></h4>\r\n                    <br/>\r\n                    Q2:     {this.state.score2}pts <br/>\r\n                    <h4 style={divStyle2}>\r\n                        {this.messages(this.state.score2) ? this.state.str4 : this.state.str3}</h4>\r\n                </h4></div>\r\n                <div style = {{marginTop: 30}}><h3>\r\n                    Total:  {parseInt(this.state.score1) + parseInt(this.state.score2)}pts\r\n                </h3></div>\r\n                <div style={{marginTop: 50, display: 'flex', justifyContent:'center'}}>\r\n                <Form inline>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={this.sendResult}\r\n                        >SUBMIT\r\n                    </Button></div>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                sessionStorage.clear()\r\n                                this.nextPath('/coap/coapClient')\r\n                            }\r\n                        }>RETRY\r\n                    </Button></div>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {                                 \r\n                                sessionStorage.clear()\r\n                                this.nextPath('/')\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button></div>\r\n                </Form></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default class UnitPhase extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            url: sessionStorage.getItem('unitURL'),\r\n            active: false\r\n        }\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    onSubmit = () => {\r\n        axios.get(localStorage.getItem('serverURL')+'/unit_score')\r\n        .then( \r\n            response => { \r\n                sessionStorage.setItem(\"methodScore\", response.data.MethodScore) //60\r\n                sessionStorage.setItem(\"postScore\", response.data.PostScore) //20\r\n                sessionStorage.setItem(\"putScore\", response.data.PutScore) //20\r\n                this.nextPath('/coap/unitTest/unitResult')\r\n            }   \r\n        )\r\n        .catch( response => { console.log(response) } );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div style={{marginTop: 200}}>\r\n                <h2>Send Your Coap GET to '{this.state.url}'</h2>\r\n                <h4 style={{padding: 10}}>\r\n                    **You Should Implement Coap Client <br/>\r\n                    Followed the Manual below.\r\n                </h4>\r\n                <Button\r\n                    variant=\"outline-success\"\r\n                    color=\"success\"\r\n                    size=\"small\"\r\n                    onClick={\r\n                        () => this.onSubmit()\r\n                    }>FINISH\r\n                </Button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n\r\nexport default class UnitResult extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            score1: sessionStorage.getItem(\"methodScore\"),\r\n            score2: sessionStorage.getItem('postScore'),\r\n            score3: sessionStorage.getItem('putScore'),\r\n            str1: \"\\\"Success\\\"\",\r\n            str2: \"\\\"Failed\\\"\"\r\n        }\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        window.location = path\r\n    }\r\n\r\n    messages = (target) => {\r\n        return target == 0\r\n    }\r\n\r\n    sendResult = () => {\r\n\r\n        var temp = {\r\n            sname: sessionStorage.getItem('sname'),\r\n            sno: sessionStorage.getItem('sno'),\r\n            sip: sessionStorage.getItem('sip'),\r\n            sport: sessionStorage.getItem('sport'),\r\n        }\r\n\r\n        axios.post(localStorage.getItem('serverURL')+'/unit_result', temp)\r\n        .then(\r\n            res => { console.log(this.state)}\r\n        ).catch( response => { console.log(response) } );\r\n    }\r\n\r\n    render(){\r\n\r\n        const container = {\r\n            width: 400,\r\n            paddingRight: 80,\r\n            paddingTop: 30, \r\n            marginTop: 50, \r\n            margin: 'auto', \r\n            display: 'flex', \r\n            flexDirection: 'column',\r\n            textAlign: 'right'\r\n        }\r\n\r\n        const divStyle1 = {\r\n            color: this.state.score1 == 0 ? \"red\" : \"blue\",\r\n            marginBottom: 10\r\n        };\r\n\r\n        const divStyle2 = {\r\n            color: this.state.score2 == 0 ? \"red\" : \"blue\",\r\n            marginBottom: 10\r\n        };\r\n\r\n        const divStyle3 = {\r\n            color: this.state.score3 == 0 ? \"red\" : \"blue\",\r\n            marginBottom: 10\r\n        };\r\n\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Scores</h2>\r\n                <h4 \r\n                    style={container}>\r\n                    Method sequence: {this.state.score1}pts <br/>\r\n                    <div style={divStyle1}>\r\n                        {this.messages(this.state.score1) ? this.state.str2 : this.state.str1}<br/></div>\r\n                    POST payload: {this.state.score2}pts <br/>\r\n                    <div style={divStyle2}>\r\n                        {this.messages(this.state.score2) ? this.state.str2 : this.state.str1}</div>\r\n                    PUT payload: {this.state.score3}pts <br/>\r\n                    <div style={divStyle3}>\r\n                        {this.messages(this.state.score3) ? this.state.str2 : this.state.str1}</div>\r\n                </h4>\r\n                <div style = {{marginTop: 30}}><h3>\r\n                    Total: &nbsp;\r\n                    {parseInt(this.state.score1) + parseInt(this.state.score2)+ parseInt(this.state.score3)}pts\r\n                </h3></div>\r\n                <div style={{marginTop: 50, display: 'flex', justifyContent:'center'}}>\r\n                <Form inline>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={this.sendResult}\r\n                        >SUBMIT\r\n                    </Button></div>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                sessionStorage.clear()\r\n                                this.nextPath('/coap/unitTest')\r\n                            }\r\n                        }>RETRY\r\n                    </Button></div>\r\n                    <div style={{padding: 10}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {                                 \r\n                                sessionStorage.clear()\r\n                                this.nextPath('/')\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button></div>\r\n                </Form></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nclass UserInfo extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sname: '',\r\n            sno: '',\r\n            sip: '',\r\n            sport: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        // this.sendInfo = this.sendInfo.bind(this)\r\n\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    sendInfo = () => {\r\n\r\n        sessionStorage.setItem(\"sname\", this.state.sname)\r\n        sessionStorage.setItem('sno', this.state.sno)\r\n        sessionStorage.setItem('sip', this.state.sip)\r\n        sessionStorage.setItem('sport', this.state.sport)\r\n\r\n        var url = localStorage.getItem('serverURL') + '/unit_test'        // var headers = { 'Access-Control-Allow-Origin': '*' }\r\n        axios.get(url)\r\n        .then( \r\n            response => { \r\n                sessionStorage.setItem(\"unitURL\", response.data.url)\r\n                this.nextPath('/coap/unitTest/unitPhase')\r\n            } \r\n            \r\n        )\r\n        .catch( response => { console.log(response) } );\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const values = this.state;\r\n        const isValidInput = values.sname == '' || values.sno == '' \r\n                        || values.sip == '' || values.sport == '';\r\n\r\n        return(\r\n            <div style={{marginTop: 200}}>\r\n                <h2>Type your profile and CoAP Client Information</h2>\r\n                <div style={{padding: 10, display: 'flex', justifyContent: 'center'}}>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sname != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sname\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type name\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Student ID: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sno != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sno\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type student id\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Your IP: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sip != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sip\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type ip\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group> \r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                    <Form.Label for=\"name\">Your Port: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sport != ''}\r\n                                        type=\"name\" \r\n                                        name=\"sport\" \r\n                                        id=\"exampleEmail\" \r\n                                        placeholder=\"type port\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        disabled={isValidInput}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            this.sendInfo\r\n                        }\r\n                        >Submit</Button>\r\n                    </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class WebClient extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sname: '',\r\n            sno: '',\r\n            sip: '',\r\n            sport: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    nextPath(path) {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    goSenario() {\r\n        sessionStorage.setItem('accessInfo', JSON.stringify(this.state))\r\n        this.nextPath('/web/webClient/get')\r\n    }\r\n\r\n    render(){\r\n\r\n        const values = this.state;\r\n        const isValidInput = values.sname == '' || values.sno == '' \r\n                        || values.sip == '' || values.sport == '';\r\n        return(\r\n            <div style={{marginTop: 150}}>\r\n                <h2>Step1. Type your profile and WEB Client Information</h2>\r\n                <div style={{padding: 10, display: 'flex', justifyContent: 'center'}}>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Name: </Form.Label>\r\n                                    <Form.Control\r\n                                        isValid={values.sname != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sname\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type name\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Student ID: </Form.Label>\r\n                                    <Form.Control\r\n                                        isValid={values.sno != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sno\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type student id\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Your IP: </Form.Label>\r\n                                    <Form.Control\r\n                                        isValid={values.sip != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sip\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type ip\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                    <Form.Label for=\"name\">Your Port: </Form.Label>\r\n                                    <Form.Control\r\n                                        isValid={values.sport != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sport\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type port\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n                </div>\r\n                <div style={{display: \"flex\", justifyContent: \"center\", marginTop: 20}}>\r\n                    <Button\r\n                        disabled={isValidInput}\r\n                        style={{marginRight: 50, width: 150}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            this.goSenario.bind(this)\r\n                        }\r\n                        >Go Scenario Test</Button>\r\n                    <DropdownButton disabled={isValidInput} variant=\"outline-info\" title=\"Go Unit Test\">\r\n                        <Dropdown.Item href=\"/web/webClient/getUnitTest\">GET method Test</Dropdown.Item>\r\n                        <Dropdown.Item href=\"/web/webClient/postUnitTest\">POST method Test</Dropdown.Item>\r\n                        <Dropdown.Item href=\"/web/webClient/putUnitTest\">PUT method Test</Dropdown.Item>\r\n                        <Dropdown.Item href=\"/web/webClient/deleteUnitTest\">DELETE method Test</Dropdown.Item>\r\n                    </DropdownButton>   \r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n\r\nexport default class Result extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            getAnswer: 'Scoring...',\r\n            postAnswer: 'Scoring...',\r\n            httpCheck: 'Scoring...',\r\n            httpVersion: 'Scoring...',\r\n            headerUserAgent: 'Scoring...',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n         axios.post(localStorage.getItem('serverURL')+'/http_result', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => {\r\n            let { getAnswer, postAnswer, httpCheck, httpVersion, headerUserAgent } = response.data;\r\n            getAnswer = sessionStorage.getItem('getSubmit') === getAnswer;\r\n            postAnswer = sessionStorage.getItem('postSubmit') === postAnswer;\r\n            this.setState({ getAnswer, postAnswer, httpCheck, httpVersion, headerUserAgent });\r\n        })\r\n        .catch((response) => {\r\n            console.log(response);\r\n        })\r\n    }\r\n\r\n    messages(target) {\r\n        return target == 0\r\n    }\r\n\r\n    sendResult() {\r\n        var temp = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\n\r\n        // need score1, score2\r\n\r\n        axios.post(localStorage.getItem('serverURL')+'/http_submit', temp)\r\n        .then(\r\n            res => { console.log(res)}\r\n        ).catch( response => { console.log(response) } );\r\n    }\r\n\r\n    colorize(target) {\r\n        if(target === true) return \"blue\"\r\n        else if(target === false) return \"red\"\r\n        else return \"black\"\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Scores</h2>\r\n                <div style={{ paddingTop: 50,\r\n                                textAlign: \"left\",\r\n                                width: 400,\r\n                                margin: 'auto',}}>\r\n                    <h4 style={{ color: this.colorize(this.state.getAnswer)}}>\r\n                        Q1 -GET Answer:     {this.state.getAnswer.toString()} <br/>\r\n                    </h4>\r\n                    <h4 style={{ color: this.colorize(this.state.postAnswer) }}>\r\n                        Q2 -POST Answer:     {this.state.postAnswer.toString()} <br/>\r\n                    </h4>\r\n                    <h4 style={{ color: this.colorize(this.state.httpCheck) }}>\r\n                        Q3 -HTTP Check:     {this.state.httpCheck.toString()} <br/>\r\n                    </h4>\r\n                    <h4 style={{ color: this.colorize(this.state.httpVersion) }}>\r\n                        Q4 -HTTP Version:     {this.state.httpVersion.toString()} <br/>\r\n                    </h4>\r\n                    <h4 style={{ color: this.colorize(this.state.headerUserAgent) }}>\r\n                        Q5 -Header User Agent:     {this.state.headerUserAgent.toString()} <br/>\r\n                    </h4>\r\n                </div>\r\n                <div style={{marginTop: 50, display: 'flex', justifyContent:'center'}}>\r\n                    <Form inline>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={this.sendResult}\r\n                            >SUBMIT\r\n                        </Button></div>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    sessionStorage.clear()\r\n                                    this.props.history.go(-3);\r\n                                }\r\n                            }>RETRY\r\n                        </Button></div>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    sessionStorage.clear()\r\n                                    this.props.history.go(-4);\r\n                                }\r\n                            }>MAIN PAGE\r\n                        </Button></div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default class ClientTest extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            testingURL: 'null',\r\n            active: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.getQuiz = this.getQuiz.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL')+'/scenario_get', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => { \r\n                this.setState({ testingURL: response.data.url });\r\n            } \r\n        ).catch( response => { console.log(response) } );\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit(param) {\r\n        sessionStorage.setItem('getSubmit', param);\r\n        this.props.history.push('/web/webClient/get/post');\r\n    }\r\n\r\n    getQuiz() {\r\n        this.setState({ active: !this.state.active })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div style={{marginTop: 150}}>\r\n                <h2>Step2. Send GET message to URL '{this.state.testingURL}'</h2>\r\n                <h4 style={{padding: 10, textAlign: \"left\", marginLeft: 500}}>\r\n                    You should follow the protocols below: <br/><br/>\r\n                    <h5 style={{fontStyle: \"italic\"}}>\r\n                    *HTTP Version should be \"1.1\" <br/>\r\n                    *User-Agent header should be \"ComputerNetwork\"</h5>\r\n                </h4>\r\n                <Button\r\n                    variant=\"outline-success\"\r\n                    color=\"success\"\r\n                    size=\"small\"\r\n                    onClick={this.getQuiz}>GO TEST\r\n                </Button>\r\n                {this.state.active && <Quiz1 onSubmit={this.handleSubmit}></Quiz1>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass Quiz1 extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            try: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    nextPath(path) {\r\n        window.location = path;\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.props.onSubmit(this.state.try);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{padding:10, marginTop: 30, paddingRight: 150, paddingLeft: 150}}>\r\n                <h3>Q1. What response did you get?</h3>\r\n                <Form>\r\n                    <div style={{width: 400, margin: 'auto', textAlign: 'left'}}>\r\n                        <Form.Label for=\"try\">Answer: </Form.Label>\r\n                        <Form.Control\r\n                            type=\"try\"\r\n                            name=\"try\"\r\n                            id=\"exampleEmail\"\r\n                            placeholder=\"your answer\"\r\n                            onChange={this.handleChange}></Form.Control></div>\r\n                    <Button\r\n                        style={{marginTop:20}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={this.handleSubmit.bind(this)}>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class ClientTest2 extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            testingURL: 'null',\r\n            active: false\r\n        }\r\n        this.getQuiz = this.getQuiz.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    getQuiz() {\r\n        this.setState({ active: !this.state.active })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL') + '/scenario_post', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((res) => {\r\n            this.setState({ testingURL: res.data.url });\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    handleSubmit(params) {\r\n        sessionStorage.setItem('postSubmit', params);\r\n        this.props.history.push('/web/webClient/get/post/result');   \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Step3. Send POST request to '{this.state.testingURL}'</h2>\r\n                <h4 style={{padding: 10, textAlign: \"left\", marginLeft: 500}}>\r\n                    You should follow the protocols below: <br/><br/>\r\n                    <h5 style={{fontStyle: \"italic\"}}>\r\n                    *HTTP Version should be \"1.1\" <br/>\r\n                    *User-Agent header should be \"ComputerNetwork\" <br/>\r\n                    *The Message should include your student ID like below <br/>\r\n                    {JSON.stringify({ \"studentID\" : 20150044466 })}\r\n                    </h5>\r\n                </h4>\r\n                <div style={{marginTop: 20}}>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={this.getQuiz.bind(this)}>GO TEST</Button>\r\n                    {this.state.active && <Quiz2 onSubmit={this.handleSubmit}></Quiz2>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass Quiz2 extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            try: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit() {\r\n        this.props.onSubmit(this.state.try);\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div style={{padding:10, marginTop: 30, marginRight: 300, marginLeft: 300}}>\r\n                <h3>Q2. What message did you GET?</h3>\r\n                <Form style={{width: 300, alignContent: 'center', margin: 'auto'}}>\r\n                    <div style={{padding:10, margin: 'auto', textAlign: 'left'}}>\r\n                        <Form.Label for=\"try\">Answer: </Form.Label>\r\n                        <Form.Control\r\n                            type=\"try\"\r\n                            name=\"try\"\r\n                            id=\"exampleEmail\"\r\n                            placeholder=\"your answer\"\r\n                            onChange={this.handleChange}></Form.Control></div><br/>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={() => this.handleSubmit()}>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    textAlign: \"left\", \r\n    width: 300,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana',\r\n    borderTop: '1px solid #E0E0E0',\r\n    borderBottom: '1px solid #E0E0E0'\r\n}\r\n\r\nconst tempData = {\r\n    httpCheck: false,\r\n    requestCheck: false,\r\n    httpVersion: false,\r\n    headerUserAgent: false\r\n}\r\n\r\nexport default class GetTest extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            url: null,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL')+'/http_unit', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then(res => {\r\n            this.setState({ url: res.data.url });\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleResult() {\r\n        axios.post(localStorage.getItem('serverURL')+'/get_result', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => {\r\n            sessionStorage.setItem('webClientUnitGet', JSON.stringify(response.data));\r\n            this.setState({\r\n                visible: true\r\n            });\r\n        }).catch(err => {\r\n            console.log(err);\r\n\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\" \r\n                style={{marginTop: 150, display: \"flex\", verticalAlign: \"middle\"}}>\r\n                <div style={{flex: 1}}>\r\n                    <div className=\"get-quiz\" \r\n                        style={{padding:10, paddingRight: 150, paddingLeft: 150}}>\r\n                        <h3>\r\n                            Send Your GET message to url '{this.state.url}'\r\n                        </h3>\r\n                        <h4 className=\"protocol-spec\" \r\n                            style={{flex: 1, fontStyle: \"italic\"}}>\r\n                            *HTTP Version should be \"1.1\" <br/>\r\n                            *User-Agent header should be \"ComputerNetwork\"\r\n                        </h4>\r\n                        <Button\r\n                            style={{margin: 30}}\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"medium\"\r\n                            onClick={this.handleResult.bind(this)}>\r\n                                Result\r\n                        </Button>\r\n                        {this.state.visible && <Result />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Result extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            data: JSON.parse(sessionStorage.getItem('webClientUnitGet')) || tempData,\r\n        })\r\n    }\r\n\r\n    nextPath(path) {\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    colorize(target) {\r\n        const style = { fontWeight: \"bolder\" };\r\n        if(target) style.color = \"blue\";\r\n        else style.color = \"red\";\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        return(\r\n            <div>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>HTTP Check</td>\r\n                        <td style={this.colorize(data.httpCheck)}>{(data.httpCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Request Method</td>\r\n                        <td style={this.colorize(data.requestCheck)}>{(data.requestCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>HTTP Version</td>\r\n                        <td style={this.colorize(data.httpVersion)}>{(data.httpVersion).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>User Agent</td>\r\n                        <td style={this.colorize(data.headerUserAgent)}>{(data.headerUserAgent).toString()}</td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{padding: 30, display: 'flex', justifyContent: 'center'}}>\r\n                    <Button\r\n                        style={{marginRight: 30}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                sessionStorage.clear()\r\n                                window.location = '/web/webClient';\r\n                            }\r\n                        }>RETRY\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                sessionStorage.clear()\r\n                                window.location = '/';\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    textAlign: \"left\", \r\n    width: 300,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana',\r\n    borderTop: '1px solid #E0E0E0',\r\n    borderBottom: '1px solid #E0E0E0'\r\n}\r\n\r\nconst tempData = {\r\n    httpCheck: false,\r\n    requestCheck: false,\r\n    httpVersion: false,\r\n    headerUserAgent: false\r\n}\r\n\r\nexport default class PostTest extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            url: null,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL')+'/http_unit', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then(res => {\r\n            this.setState({ url: res.data.url });\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleResult() {\r\n        axios.post(localStorage.getItem('serverURL')+'/post_result', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => {\r\n            sessionStorage.setItem('webClientResultPost', JSON.stringify(response.data));\r\n            this.setState({\r\n                visible: true\r\n            })\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\" \r\n                style={{marginTop: 150, display: \"flex\", verticalAlign: \"middle\"}}>\r\n                <div style={{flex: 1}}>\r\n                    <div className=\"post-quiz\" \r\n                        style={{padding:10, paddingRight: 150, paddingLeft: 150}}>\r\n                        <h3>\r\n                            Send Your POST message to url '{this.state.url}'\r\n                        </h3>\r\n                        <h4 className=\"protocol-spec\" \r\n                            style={{flex: 1, fontStyle: \"italic\"}}>\r\n                            *HTTP Version should be \"1.1\" <br/>\r\n                            *User-Agent header should be \"ComputerNetwork\" <br/>\r\n                            *The Message should include your student ID like below <br/>\r\n                            {JSON.stringify({ \"studentID\" : 20150044466 })}\r\n                        </h4>\r\n                        <Button\r\n                            style={{margin: 30}}\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"medium\"\r\n                            onClick={this.handleResult.bind(this)}>\r\n                                Result\r\n                        </Button>\r\n                        {this.state.visible && <Result />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Result extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            data: JSON.parse(sessionStorage.getItem('webClientResultPost')) || tempData,\r\n        })\r\n    }\r\n\r\n    \r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    colorize(target) {\r\n        const style = { fontWeight: \"bolder\" };\r\n        if(target) style.color = \"blue\";\r\n        else style.color = \"red\";\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        return(\r\n            <div>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>HTTP Check</td>\r\n                        <td style={this.colorize(data.httpCheck)}>{(data.httpCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Request Method</td>\r\n                        <td style={this.colorize(data.requestCheck)}>{(data.requestCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>HTTP Version</td>\r\n                        <td style={this.colorize(data.httpVersion)}>{(data.httpVersion).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>User Agent</td>\r\n                        <td style={this.colorize(data.headerUserAgent)}>{(data.headerUserAgent).toString()}</td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{padding: 30, display: 'flex', justifyContent: 'center'}}>\r\n                    <Button\r\n                        style={{marginRight: 30}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                sessionStorage.clear()\r\n                                this.nextPath('/web/webClient')\r\n                            }\r\n                        }>RETRY\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                sessionStorage.clear()\r\n                                this.nextPath('/')\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    textAlign: \"left\", \r\n    width: 300,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana',\r\n    borderTop: '1px solid #E0E0E0',\r\n    borderBottom: '1px solid #E0E0E0'\r\n}\r\n\r\nconst tempData = {\r\n    httpCheck: false,\r\n    requestCheck: false,\r\n    httpVersion: false,\r\n    headerUserAgent: false\r\n}\r\n\r\nexport default class PutTest extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: true,\r\n            url: null,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL')+'/http_unit', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then(res => {\r\n            this.setState({ url: res.data.url });\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleResult() {\r\n        axios.post(localStorage.getItem('serverURL')+'/put_result', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => {\r\n            sessionStorage.setItem('webClientUnitPut', JSON.stringify(response.data));\r\n            this.setState({\r\n                visible: true\r\n            })\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\" \r\n                style={{marginTop: 150, display: \"flex\", verticalAlign: \"middle\"}}>\r\n                <div style={{flex: 1}}>\r\n                    <div className=\"put-quiz\" \r\n                        style={{padding:10, paddingRight: 150, paddingLeft: 150}}>\r\n                        <h3>\r\n                            Send Your PUT message to url '{this.state.url}'\r\n                        </h3>\r\n                        <h4 className=\"protocol-spec\" \r\n                            style={{flex: 1, fontStyle: \"italic\"}}>\r\n                            *HTTP Version should be \"1.1\" <br/>\r\n                            *User-Agent header should be \"ComputerNetwork\" <br/>\r\n                            *The Message should include your student ID like below <br/>\r\n                            {JSON.stringify({ \"studentID\" : 20150044466 })}\r\n                        </h4>\r\n                        <Button\r\n                            style={{margin: 30}}\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"medium\"\r\n                            onClick={this.handleResult.bind(this)}>\r\n                                Result\r\n                        </Button>\r\n                        {this.state.visible && <Result />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Result extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.setState({\r\n            data: JSON.parse(sessionStorage.getItem('webClientUnitPut')) || tempData,\r\n        })\r\n    }\r\n\r\n    \r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    colorize(target) {\r\n        const style = { fontWeight: \"bolder\" };\r\n        if(target) style.color = \"blue\";\r\n        else style.color = \"red\";\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        return(\r\n            <div>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>HTTP Check</td>\r\n                        <td style={this.colorize(data.httpCheck)}>{(data.httpCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Request Method</td>\r\n                        <td style={this.colorize(data.requestCheck)}>{(data.requestCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>HTTP Version</td>\r\n                        <td style={this.colorize(data.httpVersion)}>{(data.httpVersion).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>User Agent</td>\r\n                        <td style={this.colorize(data.headerUserAgent)}>{(data.headerUserAgent).toString()}</td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{padding: 30, display: 'flex', justifyContent: 'center'}}>\r\n                    <Button\r\n                        style={{marginRight: 30}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                sessionStorage.clear()\r\n                                this.nextPath('/web/webClient')\r\n                            }\r\n                        }>RETRY\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                sessionStorage.clear()\r\n                                this.nextPath('/')\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    textAlign: \"left\", \r\n    width: 300,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana',\r\n    borderTop: '1px solid #E0E0E0',\r\n    borderBottom: '1px solid #E0E0E0'\r\n}\r\n\r\nconst tempData = {\r\n    httpCheck: false,\r\n    requestCheck: false,\r\n    httpVersion: false,\r\n    headerUserAgent: false\r\n}\r\n\r\nexport default class DeleteTest extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: true,\r\n            url: null,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios.post(localStorage.getItem('serverURL')+'/http_unit', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then(res => {\r\n            this.setState({ url: res.data.url });\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleResult() {\r\n        axios.post(localStorage.getItem('serverURL')+'/delete_result', JSON.parse(sessionStorage.getItem('accessInfo')))\r\n        .then((response) => {\r\n            sessionStorage.setItem('webClientResultDelete', JSON.stringify(response.data));\r\n            this.setState({\r\n                visible: true\r\n            })\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\" \r\n                style={{marginTop: 150, display: \"flex\", verticalAlign: \"middle\"}}>\r\n                <div style={{flex: 1}}>\r\n                    <div className=\"delete-quiz\" \r\n                        style={{padding:10, paddingRight: 150, paddingLeft: 150}}>\r\n                        <h3>\r\n                            Send Your DELETE message to url '{this.state.url}'\r\n                        </h3>\r\n                        <h4 className=\"protocol-spec\" \r\n                            style={{flex: 1, fontStyle: \"italic\"}}>\r\n                            *HTTP Version should be \"1.1\" <br/>\r\n                            *User-Agent header should be \"ComputerNetwork\" <br/>\r\n                        </h4>\r\n                        <Button\r\n                            style={{margin: 30}}\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"medium\"\r\n                            onClick={this.handleResult.bind(this)}>\r\n                                Result\r\n                        </Button>\r\n                        {this.state.visible && <Result />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Result extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            data: JSON.parse(sessionStorage.getItem('webClientResultDelete')) || tempData,\r\n        })\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path\r\n    }\r\n\r\n    colorize(target) {\r\n        const style = { fontWeight: \"bolder\" };\r\n        if(target) style.color = \"blue\";\r\n        else style.color = \"red\";\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        return(\r\n            <div>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>HTTP Check</td>\r\n                        <td style={this.colorize(data.httpCheck)}>{(data.httpCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Request Method</td>\r\n                        <td style={this.colorize(data.requestCheck)}>{(data.requestCheck).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>HTTP Version</td>\r\n                        <td style={this.colorize(data.httpVersion)}>{(data.httpVersion).toString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>User Agent</td>\r\n                        <td style={this.colorize(data.headerUserAgent)}>{(data.headerUserAgent).toString()}</td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{padding: 30, display: 'flex', justifyContent: 'center'}}>\r\n                    <Button\r\n                        style={{marginRight: 30}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                sessionStorage.clear()\r\n                                this.nextPath('/web/webClient')\r\n                            }\r\n                        }>RETRY\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={\r\n                            () => {\r\n                                sessionStorage.clear()\r\n                                this.nextPath('/')\r\n                            }\r\n                        }>MAIN PAGE\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button, Dropdown, DropdownButton } from 'react-bootstrap';\r\n\r\nexport default class WebServer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sname: '',\r\n            sno: '',\r\n            sip: '',\r\n            sport: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleSubmit() {\r\n        sessionStorage.setItem('accessInfo', JSON.stringify(this.state));\r\n    }\r\n\r\n    nextPath(path) {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    render(){\r\n\r\n        const values = this.state;\r\n        const isValidInput = values.sname == '' || values.sno == '' \r\n                        || values.sip == '' || values.sport == '';\r\n\r\n        return(\r\n            <div style={{marginTop: 150}}>\r\n                <h2>Step1. Type your profile and WEB Server Information</h2>\r\n                <div style={{padding: 10, display: 'flex', justifyContent: 'center'}}>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sname != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sname\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type name\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Student ID: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sno != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sno\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type student id\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                        <Form.Label for=\"name\">Your IP: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sip != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sip\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type ip\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <div style={{padding:10, marginLeft: 5, textAlign: 'left'}}>\r\n                                    <Form.Label for=\"name\">Your Port: </Form.Label>\r\n                                    <Form.Control \r\n                                        isValid={values.sport != ''}\r\n                                        type=\"name\"\r\n                                        name=\"sport\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"type port\"\r\n                                        onChange={this.handleChange}></Form.Control></div>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n\r\n                </div>\r\n                <div style={{display: \"flex\", justifyContent: \"center\", marginTop: 20}}>\r\n                    <Button\r\n                        disabled={isValidInput}\r\n                        style={{marginRight: 50, width: 120}}\r\n                        variant=\"outline-success\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        href=\"/web/webServer/result\"\r\n                        onClick={this.handleSubmit.bind(this)}\r\n                    >\r\n                        Go Test\r\n                    </Button>\r\n                    <div style={{width: 150}}>\r\n                        <DropdownButton disabled={isValidInput} variant=\"outline-info\" title=\"Go Unit Test\">\r\n                            <Dropdown.Item \r\n                                href=\"/web/webServer/statusCodeResult\"\r\n                                onClick={this.handleSubmit.bind(this)} \r\n                            >Status code Test</Dropdown.Item>\r\n                            <Dropdown.Item \r\n                                href=\"/web/webServer/headerLineResult\"\r\n                                onClick={this.handleSubmit.bind(this)}\r\n                            >Header lines Test</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Button, Modal } from 'react-bootstrap'; \r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    marginTop: 50,\r\n    textAlign: \"left\",\r\n    width: 380,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana'\r\n}\r\n\r\nconst tempData = {\r\n    \"connTest\" : \"Scoring..\", \r\n    \"multiThread\" : \"Scoring..\", \r\n    \"errorTest200\" : \"Scoring..\",\r\n    \"errorTest404\" : \"Scoring..\",\r\n    \"errorTest400\" : \"Scoring..\", \r\n    \"contentLengthTest\" : \"Scoring..\", \r\n    \"contentHtmlTest\" : \"Scoring..\", \r\n    \"contentImageTest\" : \"Scoring..\",\r\n    \"cookieTest\" : \"Scoring..\",\r\n    \"elapsedTime\": \"Unknown\",\r\n}\r\n\r\nfunction colorizeBool(target) {\r\n    const fontStyle = {};\r\n    if (target == \"Scoring..\") {\r\n        fontStyle.fontSize = 15;\r\n        fontStyle.color = \"black\";\r\n        fontStyle.fontStyle = \"italic\";\r\n    }\r\n    else {\r\n        if (target) fontStyle.color = \"blue\";\r\n        else fontStyle.color = \"red\";\r\n        fontStyle.fontWeight = \"bolder\";\r\n    }\r\n    return fontStyle;\r\n}\r\n\r\nexport default class WebServerResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = localStorage.getItem('serverURL')+'/web_server';\r\n        const userInfo = JSON.parse(sessionStorage.getItem('accessInfo'));\r\n        axios.post(url, userInfo)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            this.setState({\r\n                data: res.data == null ? [] : \r\n                res.data,\r\n            });\r\n        }).catch(err => { \r\n                console.log(err);\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const data = this.state.data;\r\n        return(\r\n            <div style={{ marginTop: 100, display: 'flex' }}>\r\n                <div id=\"score-board\" style={{ flex: 1, marginLeft: 100 }}>\r\n                    <h2>Scores</h2>\r\n                    <table style={tableStyle}>\r\n                        <tr>\r\n                            <td>Web Server Socket</td>\r\n                            <td style={colorizeBool(data.connTest)}>\r\n                                {(data.connTest).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"multiThread\">\r\n                            <td>Handling Multi-thread</td>\r\n                            <td style={colorizeBool(data.multiThread)}>\r\n                                {(data.multiThread).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"errorTest200\">\r\n                            <td>Status Code: 200 OK</td>\r\n                            <td style={colorizeBool(data.errorTest200)}>\r\n                                {(data.errorTest200).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"errorTest404\">\r\n                            <td>Status Code: 404 Not Found</td>\r\n                            <td style={colorizeBool(data.errorTest404)}>\r\n                                {(data.errorTest404).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"errorTest400\">\r\n                            <td>Status Code: 400 Bad Request</td>\r\n                            <td style={colorizeBool(data.errorTest400)}>\r\n                                {(data.errorTest400).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"contentLengthTest\">\r\n                            <td>Content-Length</td>\r\n                            <td style={colorizeBool(data.contentLengthTest)}>\r\n                                {(data.contentLengthTest).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"contentHtmlTest\">\r\n                            <td>Content-Type: text/html</td>\r\n                            <td style={colorizeBool(data.contentHtmlTest)}>\r\n                                {(data.contentHtmlTest).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"contentImageTest\">\r\n                            <td>Content-Type: image/jpeg</td>\r\n                            <td style={colorizeBool(data.contentImageTest)}>\r\n                                {(data.contentImageTest).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr id=\"cookieTest\">\r\n                            <td>(Optional) Set-Cookie: </td>\r\n                            <td style={colorizeBool(data.cookieTest)}>\r\n                                {(data.cookieTest).toString().toUpperCase()}\r\n                            </td>\r\n                        </tr>\r\n                        <tr style={{height: 30}}></tr>\r\n                        <tr id=\"elapsedTime\">\r\n                            <td style={{columnSpan: 2, textAlign: \"right\", color: \"grey\", fontStyle: \"italic\"}}>\r\n                                Total elapsed time: {data.elapsedTime} ms\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <div style={{marginTop: 20, display: 'flex', justifyContent:'center'}}>\r\n                        <Form inline>\r\n                            <div style={{padding: 10}}>\r\n                                <Button\r\n                                    variant=\"outline-success\"\r\n                                    color=\"success\"\r\n                                    size=\"small\"\r\n                                    onClick={\r\n                                        () => {\r\n                                            sessionStorage.clear()\r\n                                            this.props.history.go(-3);\r\n                                        }\r\n                                    }>RETRY\r\n                                </Button>\r\n                            </div>\r\n                            <div style={{padding: 10}}>\r\n                                <Button\r\n                                    variant=\"outline-success\"\r\n                                    color=\"success\"\r\n                                    size=\"small\"\r\n                                    onClick={\r\n                                        () => {\r\n                                            sessionStorage.clear()\r\n                                            this.props.history.go(-4);\r\n                                        }\r\n                                    }>MAIN PAGE\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <div style={{ flex: 1, height: 300 }}>\r\n                    <HistoryTable />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass HistoryTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            popupOpen: false,\r\n            popupData: null,\r\n        }\r\n    }\r\n\r\n    onLoadData() {\r\n        const url = localStorage.getItem('serverURL') + '/web_server/history';\r\n        const userInfo = JSON.parse(sessionStorage.getItem('accessInfo'));\r\n        axios.post(url, userInfo)\r\n        .then((res) => {\r\n            if (res.data != null && res.data != undefined) {\r\n                const jsonArr = [];\r\n                for (let ob of res.data) jsonArr.push(JSON.parse(ob));\r\n                this.setState({\r\n                    data: jsonArr,\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    renderPopup() {\r\n        const data = this.state.popupData || null;\r\n        if (data == null || data == undefined) return;\r\n\r\n        return(\r\n            <Modal\r\n                centered\r\n                show={this.state.popupOpen} \r\n                onHide={() => this.setState({\r\n                    popupOpen: false,\r\n                    popupData: null\r\n                })} \r\n                animation={true}>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>Web Server Socket</td>\r\n                        <td style={colorizeBool(data.connCorrect)}>\r\n                            {(data.connCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"multiThread\">\r\n                        <td>Handling Multi-thread</td>\r\n                        <td style={colorizeBool(data.multiThreadCorrect)}>\r\n                            {(data.multiThreadCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest200\">\r\n                        <td>Status Code: 200 OK</td>\r\n                        <td style={colorizeBool(data.error400Correct)}>\r\n                            {(data.error400Correct).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest404\">\r\n                        <td>Status Code: 404 Not Found</td>\r\n                        <td style={colorizeBool(data.error404Correct)}>\r\n                            {(data.error404Correct).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest400\">\r\n                        <td>Status Code: 400 Bad Request</td>\r\n                        <td style={colorizeBool(data.error400Correct)}>\r\n                            {(data.error400Correct).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentLengthTest\">\r\n                        <td>Content-Length</td>\r\n                        <td style={colorizeBool(data.lengthCorrect)}>\r\n                            {(data.lengthCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentHtmlTest\">\r\n                        <td>Content-Type: text/html</td>\r\n                        <td style={colorizeBool(data.htmlCorrect)}>\r\n                            {(data.htmlCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentImageTest\">\r\n                        <td>Content-Type: image/jpeg</td>\r\n                        <td style={colorizeBool(data.imageCorrect)}>\r\n                            {(data.imageCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"cookieTest\">\r\n                        <td>(Optional) Set-Cookie: </td>\r\n                        <td style={colorizeBool(data.cookieCorrect)}>\r\n                            {(data.cookieCorrect).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr style={{height: 30}}></tr>\r\n                    <tr id=\"elapsedTime\">\r\n                        <td style={{columnSpan: 2, textAlign: \"right\", color: \"grey\", fontStyle: \"italic\"}}>\r\n                            Total elapsed time: {data.elapsedTime} ms\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{ display: 'flex', justifyContent: 'center', margin: 20 }}>\r\n                    <Button \r\n                        variant=\"outline-secondary\" \r\n                        onClick={() => \r\n                            this.setState({\r\n                                popupOpen: !this.state.popupOpen\r\n                            })\r\n                        }\r\n                    >\r\n                        <span>Close</span>\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    } \r\n\r\n    render() {\r\n\r\n        const overflowTableStyle = { \r\n            ...tableStyle, \r\n            textAlign: 'right', \r\n        };\r\n        const { data } = this.state;\r\n\r\n        return (\r\n            <div style={{ marginRight: 100 }}>\r\n                {this.renderPopup()}\r\n                <h2>History</h2>\r\n                {this.state.data.length > 0 ?\r\n                <div style={{ height: 300, overflowY: 'auto' }}>\r\n                    <table id=\"history-table\" style={overflowTableStyle}>\r\n                        <thead>\r\n                            <tr style={{ height: 30, fontStyle: 'bolder' }}>\r\n                                <td>No.</td>\r\n                                <td>Date</td>\r\n                                <td>Score</td>\r\n                                <td>Detail</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style={{ fontSize: 15 }}>\r\n                            {data.sort((a, b) => (new Date(a.date) - new Date(b.date)))\r\n                            .map((e, i) => {\r\n                                const score = Object.values(e).filter(v => v == true).length;\r\n                                return (\r\n                                    <tr style={{ height: 20, borderBottom: '1px solid black' }}>\r\n                                        <td>{i}</td>\r\n                                        <td>{e.date}</td>\r\n                                        <td>{score} /9</td>\r\n                                        <td>\r\n                                            <u \r\n                                                style={{ color: '#28a745' }}\r\n                                                onClick={() => {\r\n                                                    this.setState({\r\n                                                        popupOpen: true,\r\n                                                        popupData: e\r\n                                                    });    \r\n                                                }}>\r\n                                                See detail\r\n                                            </u>\r\n                                        </td>\r\n                                    </tr>  \r\n                                )}\r\n                            )}\r\n                        </tbody> \r\n                    </table>\r\n                </div> : \r\n                <h4 style={{ fontStyle: 'italic', marginTop: 50 }}>No history found.</h4>}\r\n                <div style={{marginTop: 20, display: 'flex', justifyContent:'center'}}>\r\n                    <Form inline>\r\n                        <div style={{padding: 10}}>\r\n                            <Button\r\n                                variant=\"outline-success\"\r\n                                color=\"success\"\r\n                                size=\"small\"\r\n                                onClick={\r\n                                    this.onLoadData.bind(this)\r\n                                }>Load\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap'; \r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    marginTop: 50,\r\n    textAlign: \"left\",\r\n    width: 380,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana'\r\n}\r\n\r\nconst tempData = {\r\n    \"connTest\" : \"Scoring..\", \r\n    \"multiThread\" : \"Scoring..\", \r\n    \"errorTest200\" : \"Scoring..\",\r\n    \"errorTest404\" : \"Scoring..\",\r\n    \"errorTest400\" : \"Scoring..\",\r\n    \"elapsedTime\" : \"Unknown\",\r\n}\r\n\r\nexport default class StatusCodeTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = localStorage.getItem('serverURL')+'/server-status';\r\n        const userInfo = JSON.parse(sessionStorage.getItem('accessInfo'));\r\n        axios.post(url, userInfo)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            this.setState({\r\n                data: res.data == null ? tempData : \r\n                res.data,\r\n            })        \r\n        }).catch(err => {\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n\r\n    colorizeBool(target) {\r\n        const fontStyle = {};\r\n        if (target == \"Scoring..\") {\r\n            fontStyle.fontSize = 15;\r\n            fontStyle.color = \"black\";\r\n            fontStyle.fontStyle = \"italic\";\r\n        }\r\n        else {\r\n            if (target) fontStyle.color = \"blue\";\r\n            else fontStyle.color = \"red\";\r\n            fontStyle.fontWeight = \"bolder\";\r\n        }\r\n        return fontStyle;\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path;\r\n    }\r\n\r\n    render() {\r\n\r\n        const {data} = this.state;\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Web Server Unit Test Result </h2>\r\n                <h4> -HTTP Status Codes</h4>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>Web Server Socket</td>\r\n                        <td style={this.colorizeBool(data.connTest)}>\r\n                            {(data.connTest).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"multiThread\">\r\n                        <td>Handling Multi-thread</td>\r\n                        <td style={this.colorizeBool(data.multiThread)}>\r\n                            {(data.multiThread).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest200\">\r\n                        <td>Status Code: 200 OK</td>\r\n                        <td style={this.colorizeBool(data.errorTest200)}>\r\n                            {(data.errorTest200).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest404\">\r\n                        <td>Status Code: 404 Not Found</td>\r\n                        <td style={this.colorizeBool(data.errorTest404)}>\r\n                            {(data.errorTest404).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"errorTest400\">\r\n                        <td>Status Code: 400 Bad Request</td>\r\n                        <td style={this.colorizeBool(data.errorTest400)}>\r\n                            {(data.errorTest400).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr style={{height: 30}}></tr>\r\n                    <tr id=\"elapsedTime\">\r\n                        <td style={{columnSpan: 2, textAlign: \"right\", color: \"grey\", fontStyle: \"italic\"}}>\r\n                            Total elapsed time: {data.elapsedTime} ms\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{marginTop: 20, display: 'flex', justifyContent:'center'}}>\r\n                    <Form inline>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    sessionStorage.clear()\r\n                                    this.nextPath('/web/webServer')\r\n                                }\r\n                            }>RETRY\r\n                        </Button></div>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    sessionStorage.clear()\r\n                                    this.nextPath('/')\r\n                                }\r\n                            }>MAIN PAGE\r\n                        </Button></div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap'; \r\nimport axios from 'axios';\r\n\r\nconst tableStyle = {\r\n    margin: 'auto',\r\n    marginTop: 50,\r\n    textAlign: \"left\",\r\n    width: 380,\r\n    fontSize: 17,\r\n    fontStyle: 'bold',\r\n    fontFamily: 'verdana'\r\n}\r\n\r\nconst tempData = {\r\n    \"connTest\" : \"Scoring..\", \r\n    \"multiThread\" : \"Scoring..\", \r\n    \"contentLengthTest\" : \"Scoring..\", \r\n    \"contentHtmlTest\" : \"Scoring..\", \r\n    \"contentImageTest\" : \"Scoring..\",\r\n    \"elapsedTime\" : \"Unknown\",\r\n}\r\n\r\nexport default class HeaderLineTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: tempData,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = localStorage.getItem('serverURL')+'/server-header';\r\n        const userInfo = JSON.parse(sessionStorage.getItem('accessInfo'));\r\n        axios.post(url, userInfo)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                data: res.data == null ? tempData : \r\n                res.data,\r\n            })        \r\n        }).catch(err => \r\n            console.log(err)\r\n        )\r\n    }\r\n\r\n    colorizeBool(target) {\r\n        const fontStyle = {};\r\n        if (target == \"Scoring..\") {\r\n            fontStyle.fontSize = 15;\r\n            fontStyle.color = \"black\";\r\n            fontStyle.fontStyle = \"italic\";\r\n        }\r\n        else {\r\n            if (target) fontStyle.color = \"blue\";\r\n            else fontStyle.color = \"red\";\r\n            fontStyle.fontWeight = \"bolder\";\r\n        }\r\n        return fontStyle;\r\n    }\r\n\r\n    nextPath(path) {\r\n        window.location = path;\r\n    }\r\n\r\n    render() {\r\n\r\n        const data = this.state.data;\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <h2>Web Server Unit Test Result</h2>\r\n                <h4>    -HTTP Header Lines</h4>\r\n                <table style={tableStyle}>\r\n                    <tr>\r\n                        <td>Web Server Socket</td>\r\n                        <td style={this.colorizeBool(data.connTest)}>\r\n                            {(data.connTest).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"multiThread\">\r\n                        <td>Handling Multi-thread</td>\r\n                        <td style={this.colorizeBool(data.multiThread)}>\r\n                            {(data.multiThread).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentLengthTest\">\r\n                        <td>Content-Length</td>\r\n                        <td style={this.colorizeBool(data.contentLengthTest)}>\r\n                            {(data.contentLengthTest).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentHtmlTest\">\r\n                        <td>Content-Type: text/html</td>\r\n                        <td style={this.colorizeBool(data.contentHtmlTest)}>\r\n                            {(data.contentHtmlTest).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr id=\"contentImageTest\">\r\n                        <td>Content-Type: image/jpeg</td>\r\n                        <td style={this.colorizeBool(data.contentImageTest)}>\r\n                            {(data.contentImageTest).toString().toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                    <tr style={{height: 30}}></tr>\r\n                    <tr id=\"elapsedTime\">\r\n                        <td style={{columnSpan: 2, textAlign: \"right\", color: \"grey\", fontStyle: \"italic\"}}>\r\n                            Total elapsed time: {data.elapsedTime} ms\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{marginTop: 20, display: 'flex', justifyContent:'center'}}>\r\n                    <Form inline>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    sessionStorage.clear()\r\n                                    this.nextPath('/web/webServer')\r\n                                }\r\n                            }>RETRY\r\n                        </Button></div>\r\n                        <div style={{padding: 10}}>\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={\r\n                                () => {\r\n                                    sessionStorage.clear()\r\n                                    this.nextPath('/')\r\n                                }\r\n                            }>MAIN PAGE\r\n                        </Button></div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Card, Typography } from '@material-ui/core';\r\n\r\nexport default class CoapMain extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    render() {\r\n\r\n        const details = {\r\n            fontSize: 20,\r\n            color: '#A9A9A9'\r\n        }\r\n\r\n        return(\r\n            <div style={{width: 500, margin: 'auto'}}>\r\n                <Typography \r\n                    variant=\"h4\" \r\n                    component=\"h2\" \r\n                    style={{textAlign: \"left\", marginTop: 100, marginBottom: 30, fontStyle: 'italic'}}>\r\n                    CoAP <span style={details}>:Constrained Application Protocol</span>\r\n                </Typography>\r\n                <Card style={{display: 'flex', padding: 20, margin: 'auto'}}>\r\n                    <div style={{textAlign: \"left\", paddingLeft: 15}}>\r\n                        <Typography variant=\"h5\" component=\"h2\" style={{fontStyle: 'italic'}}>Scenario Test</Typography>\r\n                        <Typography style={{width: 350, marginTop: 10}}>\r\n                            Connect your device to server,<br/>\r\n                            and send observer to notify.<br/>\r\n                        </Typography>\r\n                    </div>\r\n                    <Button\r\n                        variant=\"outline-info\"\r\n                        onClick={() => this.nextPath('/coap/coapClient')}\r\n                        style={{margin: 'auto'}}>\r\n                        GO TEST\r\n                    </Button>\r\n                </Card>\r\n                <div style={{height: 30}}></div>\r\n                <Card style={{display: 'flex', padding: 20, margin: 'auto'}}>\r\n                    <div style={{textAlign: \"left\", paddingLeft: 15}}>\r\n                        <Typography variant=\"h5\" component=\"h2\" style={{fontStyle: 'italic'}}>Unit Test</Typography>\r\n                        <Typography style={{width: 350, marginTop: 10}}>\r\n                            Test your CoAP client sequentially<br/>\r\n                            following the manual given.<br/>\r\n                        </Typography>\r\n                    </div>\r\n                    <Button\r\n                        variant=\"outline-info\"\r\n                        onClick={() => this.nextPath('/coap/unitTest')}\r\n                        style={{margin: 'auto'}}>\r\n                        GO TEST\r\n                    </Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Card, Typography } from '@material-ui/core';\r\n\r\nexport default class WebMain extends Component {\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    render() {\r\n        const details = {\r\n            fontSize: 20,\r\n            color: '#A9A9A9'\r\n        }\r\n\r\n        return(\r\n            <div style={{ width: 500, margin: 'auto' }}>\r\n                <Typography \r\n                    variant=\"h4\" \r\n                    component=\"h2\" \r\n                    style={{textAlign: \"left\", marginTop: 100, marginBottom: 30, fontStyle: 'italic'}}>\r\n                    HTTP <span style={details}>:Hypertext Transfer Protocol</span>\r\n                </Typography>\r\n                <Card style={{display: 'flex', padding: 20, margin: 'auto'}}>\r\n                    <div style={{textAlign: \"left\", paddingLeft: 15}}>\r\n                        <Typography variant=\"h5\" component=\"h2\" style={{fontStyle: 'italic'}}>Web Client</Typography>\r\n                        <Typography style={{width: 350, marginTop: 10}}>\r\n                            Test your HTTP client units<br/>\r\n                            following the manual given.<br/>\r\n                        </Typography>\r\n                    </div>\r\n                    <Button\r\n                        variant=\"outline-info\"\r\n                        onClick={() => this.nextPath('/web/webClient')}\r\n                        style={{margin: 'auto'}}>\r\n                        GO TEST\r\n                    </Button>\r\n                </Card>\r\n                <div style={{height: 30}}></div>\r\n                <Card style={{display: 'flex', padding: 20, margin: 'auto'}}>\r\n                    <div style={{textAlign: \"left\", paddingLeft: 15}}>\r\n                        <Typography variant=\"h5\" component=\"h2\" style={{fontStyle: 'italic'}}>Web Server</Typography>\r\n                        <Typography style={{width: 350, marginTop: 10}}>\r\n                            Test your HTTP server<br/>\r\n                            following the manual given.<br/>\r\n                        </Typography>\r\n                    </div>\r\n                    <Button\r\n                        variant=\"outline-info\"\r\n                        onClick={() => this.nextPath('/web/webServer')}\r\n                        style={{margin: 'auto'}}>\r\n                        GO TEST\r\n                    </Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { Card, CardContent, CardActions, Typography } from '@material-ui/core';\r\nimport { Dropdown, Button } from 'react-bootstrap';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      flexGrow: 3,\r\n    },\r\n    paper: {\r\n      height: 140,\r\n      width: 100,\r\n    },\r\n    control: {\r\n      padding: theme.spacing.unit * 2,\r\n    },\r\n  });\r\n\r\nexport default class Main extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.nextPath = this.nextPath.bind(this)\r\n    }\r\n\r\n    nextPath = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div style={{display: 'flex', justifyContent: 'center', marginTop: 200}}>\r\n                <Card style={{width: 250, padding: 10, display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\r\n                    <CardContent>\r\n                    <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\r\n                        NETWORK PROTOCOL\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        HTTP\r\n                    </Typography>\r\n                    </CardContent>\r\n                    <Button\r\n                        style={{marginLeft: 'auto', marginRight: 'auto'}} \r\n                        variant=\"outline-info\" \r\n                        onClick={() => this.nextPath('/web')}>\r\n                        GO TEST</Button>\r\n                </Card>\r\n                <div style={{width: 50}}></div>\r\n                <Card style={{width: 250, padding: 10, display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\r\n                    <CardContent>\r\n                    <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\r\n                        NETWORK PROTOCOL\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        CoAP\r\n                    </Typography>\r\n                    </CardContent>\r\n                    <Button variant=\"outline-info\"\r\n                    style={{marginLeft: 'auto', marginRight: 'auto'}}\r\n                    onClick={() => this.nextPath('/coap')}>\r\n                    GO TEST\r\n                    </Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport { UserInfo, ConnectTest, ObserverTest, Result,\r\n  WebServerResult, HeaderLineTest, StatusCodeTest,\r\n  WebClient, ClientTest, ClientTest2, WebClientResult,\r\n  UnitUserInfo, UnitPhase, UnitResult,\r\n  CoapMain, WebMain, WebServer, Main, GetTest, PostTest, DeleteTest, PutTest } from './components';\r\n\r\nclass App extends Component {         \r\n\r\n  constructor(props){\r\n    super(props);\r\n\tlocalStorage.setItem('serverURL', 'http://testingweb.ap-northeast-2.elasticbeanstalk.com')\r\n    this.state = {\r\n    \tanswer : \"\"\r\n    }\r\n  }\r\n\r\n  render() {   \r\n    return (\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t<Switch>\r\n\t\t\t<div className=\"App\" style={{margin: 'auto'}}>\r\n\t\t\t\t<Route path=\"/\" exact component={Main} />\r\n\t\t\t\t<Route path=\"/web\" exact component={WebMain} />\r\n\t\t\t\t<Route path=\"/web/webClient\" exact component={WebClient} />\r\n\t\t\t\t<Route path=\"/web/webClient/get\" exact component={ClientTest} />\r\n\t\t\t\t<Route path=\"/web/webClient/get/post\" exact component={ClientTest2} />\r\n\t\t\t\t<Route path=\"/web/webClient/get/post/result\" component={WebClientResult} />\r\n\t\t\t\t<Route path=\"/web/webClient/getUnitTest\" component={GetTest}/>\r\n\t\t\t\t<Route path=\"/web/webClient/postUnitTest\" component={PostTest}/>\r\n\t\t\t\t<Route path=\"/web/webClient/putUnitTest\" component={PutTest}/>\r\n\t\t\t\t<Route path=\"/web/webClient/deleteUnitTest\" component={DeleteTest}/>\r\n\t\t\t\t<Route path=\"/web/webServer\" exact component={WebServer}/>\r\n\t\t\t\t<Route path=\"/web/webServer/result\" component={WebServerResult} />\r\n\t\t\t\t<Route path=\"/web/webServer/statusCodeResult\" component={StatusCodeTest} />\r\n\t\t\t\t<Route path=\"/web/webServer/headerLineResult\" component={HeaderLineTest} />\r\n\t\t\t\t<Route path=\"/coap\" exact component={CoapMain} />\r\n\t\t\t\t<Route path=\"/coap/unitTest\" exact component={UnitUserInfo} />\r\n\t\t\t\t<Route path=\"/coap/unitTest/unitPhase\" exact component={UnitPhase} />\r\n\t\t\t\t<Route path=\"/coap/unitTest/unitPhase/unitResult\" component={UnitResult} />\r\n\t\t\t\t<Route path=\"/coap/coapClient\" exact component={UserInfo} />\r\n\t\t\t\t<Route path=\"/coap/coapClient/connect\" exact component={ConnectTest} />\r\n\t\t\t\t<Route path=\"/coap/coapClient/connect/observer\" exact component={ObserverTest} />\r\n\t\t\t\t<Route path=\"/coap/coapClient/connect/observer/result\" component={Result} />\r\n\t\t\t</div>\r\n\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}